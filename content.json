{"meta":{"title":"TianciBlog","subtitle":"Tianci„ÅÆÂ∞èÁ™ù","description":"Tianci„ÅÆÂ∞èÁ™ù,Tianci‰∏™‰∫∫ÂçöÂÆ¢,TianciBlog","author":"Tianci","url":""},"pages":[{"title":"ÂÖ≥‰∫é","date":"2021-11-02T08:51:09.510Z","updated":"2021-11-02T08:51:09.510Z","comments":false,"path":"about/index.html","permalink":"/about/index.html","excerpt":"","text":"ÂÖ≥‰∫éÂçöüê∑ ‰∏é&nbsp; Tianci&nbsp; ÂØπËØù‰∏≠... bot_ui_ini()"},{"title":"ÁïôË®ÄÊùø","date":"2021-11-02T08:51:09.510Z","updated":"2021-11-02T08:51:09.510Z","comments":true,"path":"comment/index.html","permalink":"/comment/index.html","excerpt":"","text":"ÂêüËØó‰∏ÄÈ¶ñ","keywords":"ÁïôË®ÄÊùø"},{"title":"ÂèãÈìæ","date":"2021-11-02T08:51:09.525Z","updated":"2021-11-02T08:51:09.525Z","comments":false,"path":"links/index.html","permalink":"/links/index.html","excerpt":"","text":""},{"title":"Èó≤ËØù","date":"2021-11-02T08:51:09.525Z","updated":"2021-11-02T08:51:09.525Z","comments":false,"path":"mood/index.html","permalink":"/mood/index.html","excerpt":"","text":"new Artitalk({ appId: '5H7AydmPGv5z6GjvxW088cDJ-MdYXbMMI', // Your leancloud appId appKey: '3OgRwXUWbmNx1WhFlSs7ek6V', // Your leancloud appKey atEmoji: { \"ÊªëÁ®Ω\": \"https://cdn.jsdelivr.net/gh/moezx/cdn@3.1.9/img/Sakura/images/smilies/icon_huaji.gif\", \"Ê±ó\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200411023456.webp\", \"ÁÇπËµû\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/kawayi.webp\", \"ÂÇ≤Â®á\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409103906.webp\", \"ÂºÄÂøÉ\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409104757.webp\", \"Êâ£ÊâãÊâã\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130304.webp\", \"‰ªôÂ•≥‰∏ãÂá°\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130301.webp\", \"ÂæóÁëü\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130258.webp\", \"ÊèâÂ∑¶ËÑ∏\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130254.webp\", \"ÊèâÂè≥ËÑ∏\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200409130249.webp\", \"ÂΩ©ËôπÊªëÁ®Ω\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/caihongtiao.webp\", \"ÂëÜÊªû\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/daizhi.webp\", \"Ë∫≤ËøõÂ∞èË¢´Â≠ê\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/djxbz.webp\", \"ÊãΩËµ∞Â∞èË¢´Â≠ê\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/zzxbz.webp\", \"Âπ≤\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/gan.webp\", \"ÁªôÊàë‰πüÊï¥‰∏Ä‰∏™\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/gwyzyg.webp\", \"ÂÆ≥ÊÄï\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/hp.webp\", \"ÊÄÄÁñë\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200412095314.webp\", \"Ëçâ\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/imgcao.webp\", \"Ëä±\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/imghua.webp\", \"Êó•\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/imgri.webp\", \"Âè∂\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/imgye.webp\", \"Â§π‰Ωè\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/kz.webp\", \"ÁõÆÁû™ÁãóÂëÜ\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/20200412095243.webp\", \"ÂäàÂèâ\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/pc.webp\", \"Ë∏¢Ê•º‰∏äÂ±ÅËÇ°\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/tlspg.webp\", tql: \"https://cdn.jsdelivr.net/gh/drew233/cdn/tql.webp\", \"Êó†ËØ≠\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/wuyu.webp\", \"ËΩ¨ÂúàÂúà\": \"https://cdn.jsdelivr.net/gh/drew233/cdn/zqq.webp\" }, })"},{"title":"","date":"2021-11-02T08:51:09.525Z","updated":"2021-11-02T08:51:09.525Z","comments":true,"path":"mood/css/style.css","permalink":"/mood/css/style.css","excerpt":"","text":"#shuoshuo_content { background-color: #fff; padding: 10px; min-height: 500px; } /* shuo */ body.theme-dark .cbp_tmtimeline::before { background: RGBA(255, 255, 255, 0.06); } ul.cbp_tmtimeline { padding: 0; } div class.cdp_tmlabel > li .cbp_tmlabel { margin-bottom: 0; } .cbp_tmtimeline { margin: 30px 0 0 0; padding: 0; list-style: none; position: relative; } /* The line */ .cbp_tmtimeline:before { content: ''; position: absolute; top: 0; bottom: 0; width: 4px; background: RGBA(0, 0, 0, 0.02); left: 80px; margin-left: 10px; } /* The date/time */ .cbp_tmtimeline > li .cbp_tmtime { display: block; /* width: 29%; */ /* padding-right: 110px; */ max-width: 70px; position: absolute; } .cbp_tmtimeline > li .cbp_tmtime span { display: block; text-align: right; } .cbp_tmtimeline > li .cbp_tmtime span:first-child { font-size: 0.9em; color: #bdd0db; } .cbp_tmtimeline > li .cbp_tmtime span:last-child { font-size: 1.2em; color: #9BCD9B; } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmtime span:last-child { color: RGBA(255, 125, 73, 0.75); } div.cbp_tmlabel > p { margin-bottom: 0; } /* Right content */ .cbp_tmtimeline > li .cbp_tmlabel { margin: 0 0 45px 65px; background: #9BCD9B; color: #fff; padding: .8em 1.2em .4em 1.2em; /* font-size: 1.2em; */ font-weight: 300; line-height: 1.4; position: relative; border-radius: 5px; transition: all 0.3s ease 0s; box-shadow: 0 1px 2px rgba(0, 0, 0, 0.15); cursor: pointer; display: block; /* Á¶ÅÁî®ÁÇπÂáª‰∫ã‰ª∂ */ /* pointer-events:none; */ } .cbp_tmlabel:hover { /* transform:scale(1.05); */ transform: translateY(-3px); z-index: 1; box-shadow: 0 15px 32px rgba(0, 0, 0, 0.15) !important } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmlabel { background: RGBA(255, 125, 73, 0.75); } /* The triangle */ .cbp_tmtimeline > li .cbp_tmlabel:after { right: 100%; border: solid transparent; content: \" \"; height: 0; width: 0; position: absolute; pointer-events: none; border-right-color: #9BCD9B; border-width: 10px; top: 4px; } .cbp_tmtimeline > li:nth-child(odd) .cbp_tmlabel:after { border-right-color: RGBA(255, 125, 73, 0.75); } p.shuoshuo_time { margin-top: 10px; border-top: 1px dashed #fff; padding-top: 5px; } /* Media */ @media screen and (max-width: 65.375em) { .cbp_tmtimeline > li .cbp_tmtime span:last-child { font-size: 1.2em; } } .shuoshuo_author_img img { border: 1px solid #ddd; padding: 2px; float: left; border-radius: 64px; transition: all 1.0s; } .avatar { border-radius: 100% !important; -moz-border-radius: 100% !important; box-shadow: inset 0 -1px 0 3333sf; -webkit-box-shadow: inset 0 -1px 0 3333sf; -webkit-transition: 0.4s; -webkit-transition: -webkit-transform 0.4s ease-out; transition: transform 0.4s ease-out; -moz-transition: -moz-transform 0.4s ease-out; } .zhuan { transform: rotateZ(720deg); -webkit-transform: rotateZ(720deg); -moz-transform: rotateZ(720deg); } /* end */"}],"posts":[{"title":"ForEver","slug":"ForEver","date":"2021-11-02T18:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":false,"path":"Other/ForEver/","link":"","permalink":"/Other/ForEver/","excerpt":"ÂÜçËßÅ","text":"function doDecrypt (pwd, onError) { const txt = document.getElementById('enc_content').innerHTML; let plantext; try { const bytes = CryptoJS.AES.decrypt(txt, pwd); var plaintext = bytes.toString(CryptoJS.enc.Utf8); } catch(err) { if(onError) { onError(err); } return; } document.getElementById('enc_content').innerHTML = plaintext; document.getElementById('enc_content').style.display = 'block'; document.getElementById('enc_passwd').style.display = 'none'; if(typeof MathJax !== 'undefined') { MathJax.Hub.Queue( ['resetEquationNumbers', MathJax.InputJax.TeX], ['PreProcess', MathJax.Hub], ['Reprocess', MathJax.Hub] ); } }  var onError = function(error) { document.getElementById(\"enc_error\").innerHTML = \"ÂØÜÁ†Å‰∏çÂØπÂì¶!\" }; function decrypt() { var passwd = document.getElementById(\"enc_pwd_input\").value; doDecrypt(passwd, onError); }","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"Â®±‰πê","slug":"Â®±‰πê","permalink":"/tags/Â®±‰πê/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"ÊäÑÁöÑÊñáÊ°à","slug":"Copywriting_1","date":"2021-09-22T16:20:00.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"Other/Copywriting_1/","link":"","permalink":"/Other/Copywriting_1/","excerpt":"","text":"Âíå‰Ω†ÔºåË∑åË∑åÊíûÊíûÈïøÂ§ßÔºõËøòË¶ÅÔºåÁ£®Á£®Ëπ≠Ëπ≠ÂèòËÄÅ„ÄÇAnd you, stumbled and grew up; Also,dawdle and grow old. ËøúÂ§ßÂâçÁ®ã ÊòüÂÖâ‰∏áÈ°∑ ‰Ω†ÂêëÂåóÂêëÂçóÂêëË•øÂêë‰∏ú ËÄåÊàëÂè™Âêë‰Ω†.Great expectations, bright stars, you go north, south, west and east, and I only ask you. ‰Ω†ÊòØÊèâÁ¢éÁöÑÊó•ÂÖâÔºåËêΩÂÖ•ÊàëÊ¢¶Â¢ÉÁöÑ‰∏ÄÁâáÊ∏©Êöñ„ÄÇÁõ¥Âà∞ÈÅáËßÅ‰Ω†ÔºåÂ¶ÇÈ∫ãÈπøÂΩíÊûóÔºåÊú®ËàüÈù†Â≤∏ are the broken sunlight, falling into the warmth of my dreams. Áõ¥Âà∞ÈÅáËßÅ‰Ω†ÔºåÂ¶ÇÈ∫ãÈπøÂΩíÊûóÔºåÊú®ËàüÈù†Â≤∏Until I meet you, such as elk returning to the forest and wooden boat landing. È£éË°åËøá‰∏áÈáåÔºåÊúàÊ≤âËøáÊµ∑Â∫ï„ÄÇÊàëÈÅáËßÅ‰∫Ü‰∏ñÁïå‰∏äÁöÑ‰∏ÄÂàáÔºåÂç¥Âè™ÂñúÊ¨¢‰Ω†. ÂÖàÁîüÊòØÊàëÊº´Êº´‰ΩôÁîüÈáåÊñ©ÈíâÊà™ÈìÅÁöÑÊ¢¶ÊÉ≥ÔºåÂ§´‰∫∫ÊòØÊàëÊù•Êó•ÊñπÈïø‰∏≠ËÄøËÄø‰∫éÊÄÄÁöÑÁâµÊåÇ„ÄÇhusband is my absolute dream for the rest of my life, and my wife is my lingering concern. ÊõæÁªèÂ∞èÈπø‰π±ÊíûËøáÔºåÂ¶Ç‰ªäÂ∞èÈπøÈïøÂ§ß‰∫ÜÔºåËµ∞Ë∑ØË¥ºÁ®≥ËøòÂ∏¶È£éÔºåÂèØÊòØËßÅÂà∞‰Ω†ÁöÑÈÇ£‰∏ÄÂàªÔºåÂÆÉÂØπÊàëËØ¥Ôºö‚ÄùÊàëÊúÄÂêé‰∏ÄÊ¨°Ë∑≥‰∫ÜÂì¶„ÄÇ‚ÄùÊ≤°ÊÉ≥Âà∞ÂÆÉÈ™ó‰∫ÜÊàëÔºåÂÆÉÂ§©Â§©Ë∑≥„ÄÇ ÊÉ≥Âíå‰Ω†Âú®ÊØè‰∏Ä‰∏™Êó•ËñÑÊ°ëÊ¶ÜÁöÑÊµ∑ËæπÔºåÁúãÈªÑÊòèÂù†ËêΩ‰∫∫Èó¥ÈÇ£‰∏ÄÂàªÁöÑÁæéÂ•Ω„ÄÇ ‚Äú‰Ω†Áü•ÈÅìÂú£Êó®ÊòØ‰ªÄ‰πàÂêó?‚Äù‚ÄúÊòØ‰ªÄ‰πà?‚Äù‚ÄúÊòØ‰Ω†ÂØπÊàëËØ¥ÁöÑÊØè‰∏ÄÂè•ËØù‚Äù ‚ÄúÊàëÊÄÄÁñë‰Ω†ÊòØÁ¢≥ÈÖ∏È•ÆÊñô‚Äù‚Äú‰∏∫‰ªÄ‰πà?‚Äù‚ÄúÂõ†‰∏∫‰∏ÄÈÅáËßÅ‰Ω†ÔºåÊàëÂ∞±ÂºÄÂøÉÂú∞ÂÜíÊ≥°Ê≥°‚Äù ‚ÄúÊàëÁöÑË∫´‰ªΩÊòØÈ¢ÑË®ÄÂÆ∂‚Äù‚ÄúÁÑ∂ÂêéÂë¢‚Äù‚ÄúÂíãÊôöÊü•‰∫Ü‰Ω†ÁöÑË∫´‰ªΩÔºå‰Ω†ÊòØÊàëÂñúÊ¨¢ÁöÑ‰∫∫‚Äù ‚ÄúÂø´Âèë‰∏™ÂÆö‰ΩçÁªôÊàë‚Äù‚ÄúÂπ≤ÂòõÔºü‚Äù‚ÄúÊàëÊÉ≥Áü•ÈÅì‰∏Ä‰ª∂‰∫ã‚Äù‚ÄúÊàëÊÉ≥Áü•ÈÅìÊàëÁöÑÂøÉË∑ëÂì™ÈáåÂéª‰∫Ü‚Äù ‚ÄúÂê¨ËØ¥98kÂèØ‰ª•ÁàÜÂ§¥‚Äù‚ÄúÂóØ ÁÑ∂ÂêéÂë¢‚Äù‚ÄúÁÑ∂Âêé ÊàëÂèØ‰ª•Êä±Êä±‰Ω†Âêó‚Äù ‚ÄúÂÆ†‰Ω†ÊòØÊàëÁöÑÂøÖ‰øÆËØæÁà±‰Ω†ÊòØÊàëÁöÑ‰∏ì‰∏öËØæ‰Ω†ÊòØÊàë‰∏Ä Áîü‰∏ä‰∏çÂÆåÁöÑËØæLoving you is my required course,lovingyouis my major course, andyou are my endless class ‰Ω†ËΩªÊùæÊãíÁªùÊéâÈÇ£‰∏™ÈùûÂ∏∏ÂñúÊ¨¢‰Ω†ÁöÑ‰∫∫‰πüÊòØÂà´‰∫∫Ê¢¶ÂØê‰ª•Ê±ÇÁöÑÂøÉ‰∏ä‰∫∫You can easily refuse the person who likes you very much and is also the sweetheart that other people dream of‰Ω†Ëã¶Ëã¶ËøΩÊ±Ç‰∏çÂà∞ÁöÑÂøÉ‰∏ä‰∫∫Âú®Âè¶‰∏Ä‰∏™‰∫∫ÈÇ£Èáå‰πüÂæàÂçëÂæÆThe sweetheart you can‚Äôt get is humble with another person Â∞±ÁÆóÊàëÊò®Â§©ÊääËØùËØ¥ÁöÑÂÜçÁªùÊàë‰ª¨ÂêµÁöÑÂ§öÂá∂‰ªäÂ§©ÈÜíÊù•ÊàëËøòÊòØÂæàÁà±‰Ω†Meme si je t‚Äôai dit ce gue j‚Äôai dit hier, que nous etions si mechants qu‚Äô aujourd‚Äôhui, je t‚Äôaime‰Ω†Ê∞∏ËøúÊòØÊàëÁöÑÂÅèÁà±Âíå‰æãÂ§ñËÆ§Áúü‰∏îÊÄÇ‰ªéÂßãËá≥ÁªàTu seras toujours mon prefere et mon exception, serieux et indefectible. Êãß‰∏çÂºÄÁì∂ÁõñÂ∞±‰ΩøÂä≤ÔºåÊãßÂ§úË∑ØÂèØ‰ª•Ëá™Â∑±Ëµ∞ÔºåÂ§©ÂÜ∑Â∞±Á©øÂ§ñÂ•óSi tu ne peux pas devisser la bouteille, tu peux t essuyer la nuit et porter ton manteau.È•ø‰∫ÜÂ∞±ÂêÉÈ•≠ÔºåÁ¥Ø‰∫ÜÂ∞±Áù°ËßâÔºåÊâÄË∞ìÂÆâÂÖ®ÊÑüÂ∞±ÊòØËá™Â∑±ÁªôËá™Â∑±Quand on a faim, on mange, on dort, on se sent en securite. ‰ª•ÂêéÁÖßÈ°æÂ•ΩËá™Â∑±Ôºå‰∏â‰∫îÂπ¥‰ª•ÂêéËøòËÉΩÊÉ≥Âà∞ÊàëÔºåÂ∞±ÊâæÊàëÂêß„ÄÇTake good care of yourself in the future after three or five years can still think of me to ask meÂèØËÉΩ‰ºöÊâæÂà∞‰πüÂèØËÉΩÊâæ‰∏çÂà∞ÔºåË∞¢Ë∞¢‰Ω†ÊõæÁªèÁªôÊàëÈÇ£ÁßçÂ∞èÈπø‰π±ÊíûÁöÑÊÑüËßâ„ÄÇMay or may not find thank you once gave me that kind of deer disorderly bump feeling Êàë‰∏ç‰ºöÂÜçÁÇ´ËÄÄÊàëË∫´ËæπÊúâË∞Å‰∫ÜÊàëÊÄïÁ™ÅÁÑ∂Á¶ªÂºÄ‰ºöËÆ©ÊàëÂ∞¥Â∞¨I won‚Äôt brag about who I‚Äôm with anymore. I‚Äôm afraid I‚Äôll be embarrassed if I suddenly leaveÊàë‰πü‰∏çÊúüÂæÖË∞ÅÊòØÊàëÁöÑÊù•Êó•ÊñπÈïøÊàëÂÆ≥ÊÄïÊúÄÂêéÂ§ßÊ¢¶‰∏ÄÂú∫I do not expect who is my future I am afraid of the last big dream ‰ªñËØ¥‰Ω†‰ªª‰Ωï‰∏∫‰∫∫Áß∞ÈÅìÁöÑÁæé‰∏Ω‰∏çÂèä‰ªñÁ¨¨‰∏ÄÊ¨°ÈÅáËßÅ‰Ω†","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"Â®±‰πê","slug":"Â®±‰πê","permalink":"/tags/Â®±‰πê/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"LayuiÂ∞èÁü•ËØÜ","slug":"Layui_First","date":"2021-08-19T15:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Other/Layui_First/","link":"","permalink":"/Other/Layui_First/","excerpt":"ÈÅáÂà∞ÁöÑ‰∏Ä‰∫õÈóÆÈ¢òÂèäËß£ÂÜ≥ÊñπÊ≥ï","text":"ÈÅáÂà∞ÁöÑ‰∏Ä‰∫õÈóÆÈ¢òÂèäËß£ÂÜ≥ÊñπÊ≥ï È¶ñÂÖàÂÆö‰πâLayuiÈúÄË¶ÅÁöÑÁªÑ‰ª∂var $ = layui.$; var admin = layui.admin; var table = layui.table; var layer = layui.layer; var form = layui.form; ‰∏ãÊãâÊ°Ü‰ªéÊé•Âè£Ëé∑ÂèñÊï∞ÊçÆÂπ∂ËµãÂÄº&lt;div class=&quot;layui-input-inline&quot; style=&quot;width:100px;&quot;&gt; &lt;select asp-for=&quot;ÁªëÂÆöÂ≠óÊÆµ&quot; name=&quot;ÁªëÂÆöÂ≠óÊÆµ&quot; class=&quot;ÁªëÂÆöÂ≠óÊÆµMode&quot; autocomplete=&quot;off&quot; lay-search&gt; &lt;/select&gt; &lt;/div&gt; $(function () { $.ajax({ url: &#39;@Url.Action(&quot;Create&quot;, &quot;User&quot;)&#39;,//ËØ∑Ê±ÇÂú∞ÂùÄÔºàMVCÂÜôÊ≥ïÔºåÊñπÊ≥ïÔºåÊéßÂà∂Âô®ÂêçÔºâ type: &#39;POST&#39;, dataType: &#39;json&#39;, contentType: &quot;application/json; charset=utf-8&quot;, success: function (result) { if (result.code == 200) { for (var k in result.data) { $(&quot;.ÁªëÂÆöÂ≠óÊÆµMode&quot;).append(&quot;&lt;option value=&#39;&quot; + result.data[k].KeyName + &quot;&#39;&gt;&quot; + result.data[k].Value + &quot;&lt;/option&gt;&quot;);//ÈÄöËøáclassÊ∑ªÂä†ÈÄâÈ°π } layui.use(&#39;form&#39;, function () { var form = layui.form; form.render(); }); } else { layer.msg(result.msg, { icon: 2, offset: &#39;200px&#39;, time: 3000 }) } } }); }); Ëé∑ÂèñÂΩìÂâçÈ°µÈù¢Ë°®ÂçïÈáåÈù¢ÁöÑÊï∞ÊçÆvar data = form.val(&#39;formId&#39;);//ÈÄöËøáË°®ÂçïIdÂèñÂÖ®ÈÉ®Â≠óÊÆµÊï∞ÊçÆ Ëé∑ÂèñÂ≠êÈ°µÈù¢Ë°®ÂçïÊï∞ÊçÆÈÄªËæëÔºöÊâìÂºÄÊ∑ªÂä†Ë°®ÂçïÔºàÊñ∞È°µÈù¢CreateÔºâÁÇπÊèê‰∫§Ë∞ÉÁî®POSTÊñπÊ≥ï‰º†ÂÄºÔºàdataValueÔºâlayer.open({ type: 2, title: &#39;Ê∑ªÂä†Áî®Êà∑&#39;, id: &#39;CreateUser&#39;, content: &#39;@Url.Action(&quot;Create&quot;, &quot;User&quot;)&#39;,//ÊâìÂºÄÈ°µÈù¢ÔºàMVCÂÜôÊ≥ïÔºåÂØπÂ∫îÈ°µÈù¢ÂèäGETÊñπÊ≥ïÔºåÊéßÂà∂Âô®ÂêçÔºâ area: [&#39;528px&#39;, &#39;468px&#39;], maxmin: true, btn: [&#39;Êèê‰∫§&#39;, &#39;ÂÖ≥Èó≠&#39;], yes: function (index, layero) { var iframeWindow = layero.find(&#39;iframe&#39;)[0].contentWindow; var dataValue = iframeWindow.layui.form.val(&quot;Â≠êÈ°µÈù¢formË°®ÂçïId&quot;);//Ë°®ÂçïÊï∞ÊçÆ $.ajax({ url: &#39;@Url.Action(&quot;Create&quot;, &quot;User&quot;)&#39;,//ËØ∑Ê±ÇPOSTÂú∞ÂùÄÔºàMVCÂÜôÊ≥ïÔºåPOSTÊñπÊ≥ïÔºåÊéßÂà∂Âô®ÂêçÔºâ type: &#39;POST&#39;, dataType: &#39;json&#39;, data: JSON.stringify(dataValue), contentType: &quot;application/json; charset=utf-8&quot;, success: function (result) { if (result.responseCode == 200) { layer.msg(result.Message, { offset: &#39;200px&#39;, time: 3000 }) layer.close(index); } else { layer.msg(result.Message, { icon: 2, offset: &#39;200px&#39;, time: 3000 }) } } }); }, cancel: function () { return true; }, end: function () { table.reload(&#39;ÂΩìÂâçÈ°µÈù¢ÂàóË°®TableId&#39;, { page: { curr: 1 } }); } }); ÁªôÊñ∞È°µÈù¢Ë°®ÂçïËµãÈªòËÆ§ÂÄºÔºåÁÇπÂáª‰øÆÊîπÁöÑÂú∫ÊôØÂú®ÊéßÂà∂Âô®ÂÜÖEditÂØπÂ∫îÁöÑGETÊñπÊ≥ïËøîÂõûÂÄºÂ∞±ÂèØ‰ª•‰∫ÜÔºåEditÈ°µÈù¢formË°®ÂçïÁªëÂÆö","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"ÂàùËØÜML.NET","slug":"ML.NET","date":"2021-08-11T15:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Other/ML.NET/","link":"","permalink":"/Other/ML.NET/","excerpt":"‰ªÄ‰πàÊòØML.NETÔºåÂÆòÊñπÊñáÊ°£ÁªôÂá∫Ëß£ÈáäÂ¶Ç‰∏ã","text":"‰ªÄ‰πàÊòØML.NETÔºåÂÆòÊñπÊñáÊ°£ÁªôÂá∫Ëß£ÈáäÂ¶Ç‰∏ã ML.NET ‰Ωø‰Ω†ËÉΩÂ§üÂú®ËÅîÊú∫ÊàñËÑ±Êú∫Âú∫ÊôØ‰∏≠Â∞ÜÊú∫Âô®Â≠¶‰π†Ê∑ªÂä†Âà∞ .NET Â∫îÁî®Á®ãÂ∫è‰∏≠„ÄÇ ÂÄüÂä©Ê≠§ÂäüËÉΩÔºåÂèØ‰ª•‰ΩøÁî®Â∫îÁî®Á®ãÂ∫èÁöÑÂèØÁî®Êï∞ÊçÆËøõË°åËá™Âä®È¢ÑÊµã„ÄÇ Êú∫Âô®Â≠¶‰π†Â∫îÁî®Á®ãÂ∫èÂà©Áî®Êï∞ÊçÆ‰∏≠ÁöÑÊ®°ÂºèÊù•ËøõË°åÈ¢ÑÊµãÔºåËÄå‰∏çÈúÄË¶ÅËøõË°åÊòæÂºèÁºñÁ®ã„ÄÇ ML.NET ÁöÑÊ†∏ÂøÉÊòØÊú∫Âô®Â≠¶‰π†Ê®°Âûã „ÄÇ ËØ•Ê®°ÂûãÊåáÂÆöÂ∞ÜËæìÂÖ•Êï∞ÊçÆËΩ¨Êç¢‰∏∫È¢ÑÊµãÊâÄÈúÄÁöÑÊ≠•È™§„ÄÇ ÂÄüÂä© ML.NETÔºåÂèØ‰ª•ÈÄöËøáÊåáÂÆöÁÆóÊ≥ïÊù•ËÆ≠ÁªÉËá™ÂÆö‰πâÊ®°ÂûãÔºå‰πüÂèØ‰ª•ÂØºÂÖ•È¢ÑËÆ≠ÁªÉÁöÑ TensorFlow Âíå ONNX Ê®°Âûã„ÄÇ Êã•ÊúâÊ®°ÂûãÂêéÔºåÂèØ‰ª•Â∞ÜÂÖ∂Ê∑ªÂä†Âà∞Â∫îÁî®Á®ãÂ∫è‰∏≠ËøõË°åÈ¢ÑÊµã„ÄÇ ÊÑèÊÄùÂ∞±ÊòØÂèØ‰ª•ËÑ±Êú∫ËÆ≠ÁªÉÊ®°ÂûãÔºåËÆ©Á®ãÂ∫èÊã•ÊúâËá™‰∏ªÂà§Êñ≠ÊÑèËØÜÁ¨¨‰∏ÄÊ≠•ÂàõÂª∫‰∏Ä‰∏™Êú∫Âô®Â≠¶‰π†Ê®°ÂûãÔºåÂú®‰∏Ä‰∏™Êñ∞È°πÁõÆ‰∏≠Âè≥ÂáªÊ∑ªÂä†Êú∫Âô®Â≠¶‰π† ÈÄâÊã©‰∏Ä‰∏™ÊñπÊ°àÔºåËøôËæπÈÄâÊã©ÂõæÂÉèÂàÜÁ±ª ÈÄâÊã©ÁéØÂ¢ÉÔºåÂõ†‰∏∫Ê≤°ÊúâAzure‰∏äÁöÑÊï∞ÊçÆÊâÄ‰ª•ÈÄâÊã©Êú¨Âú∞Êñá‰ª∂Â§π ËøôËæπÈÄâÊã©ÁöÑÂõæÁâáÊúâÁÇπÂ§öÔºåÂàÜ‰∏∫Âõõ‰∏™Á±ªÂûã ÁÇπÂáªËÆ≠ÁªÉÔºåÂ¶ÇÊûúÂõæÁâáÂ§™Â§öËÆ≠ÁªÉÊó∂Èó¥‰πü‰ºöÂèòÈïøÔºåËøôËæπÂ∑≤ÁªèËÆ≠ÁªÉÂ•Ω‰∫Ü ËÆ≠ÁªÉÂÆåÊàêÂèØ‰ª•ÈÄâÊã©‰∏ÄÂº†Êú¨Âú∞ÂõæÁâáÊù•ËøõË°åÂàÜÊûê ÊúÄÂêéÂèØ‰ª•Â∞Ü‰ª£Á†ÅÊ∑ªÂä†Âà∞Êú¨Âú∞ÔºåÊü•ÁúãËøêË°åÈÄªËæë‰ª•ÂèäÁîüÊàêÁöÑÊñá‰ª∂ ÊâìÂºÄConsoleApp.Program.csÊñá‰ª∂‰øÆÊîπModelInput sampleData = new ModelInput() { ImageSource = &quot;ÂèØÂ°´Êú¨Âú∞‰ªªÊÑèÂõæÁâáË∑ØÂæÑ&quot; }; ÊàëËøôËæπ‰∏ãËΩΩ‰∫ÜÂæàÂ§öÂõæÁâáËøõË°åÂæ™ÁéØÂàÜÊûê ÊúÄÂêé‰∏ÄÂÖ±‰∫îÂçÅÂº†ÂõæÁâáÔºåËØØÂà§11Âº†ÔºåÊÉ≥Ë¶ÅËØÜÂà´Êõ¥Âä†Á≤æÁ°ÆÂ∞±ÂæóÊ∑ªÂä†Êõ¥Â§öÂõæÁâáËØÜÂà´Êõ¥Â§öÁªÜËäÇËøõË°åÂàÜÊûê","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"AppveyorÊåÅÁª≠ÈõÜÊàêHexo","slug":"Hexo_Appveyor","date":"2021-08-06T18:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Other/Hexo_Appveyor/","link":"","permalink":"/Other/Hexo_Appveyor/","excerpt":"ÂçäÂπ¥Ê≤°ÂÜôÂçöÂÆ¢ÔºåÁ™ÅÁÑ∂Êé•Ëß¶Âà∞‰∏Ä‰∏™Êñ∞ËØçÂè´ÂÅöCIÔºàÊåÅÁª≠ÈõÜÊàêÔºâÂíåCDÔºàÊåÅÁª≠‰∫§‰ªòÔºâÂ≠¶‰π†‰∏Ä‰∏ãAppVeyorÊåÅÁª≠ÈõÜÊàêHexoÂπ∂ÈÖçÁΩÆGitHub Pages","text":"ÂçäÂπ¥Ê≤°ÂÜôÂçöÂÆ¢ÔºåÁ™ÅÁÑ∂Êé•Ëß¶Âà∞‰∏Ä‰∏™Êñ∞ËØçÂè´ÂÅöCIÔºàÊåÅÁª≠ÈõÜÊàêÔºâÂíåCDÔºàÊåÅÁª≠‰∫§‰ªòÔºâÂ≠¶‰π†‰∏Ä‰∏ãAppVeyorÊåÅÁª≠ÈõÜÊàêHexoÂπ∂ÈÖçÁΩÆGitHub Pages ÂàõÂª∫È°πÁõÆÔºåÂú® /projects È°µÈù¢ÈÄâÊã©‰Ω†ÁöÑÂçöÂÆ¢Ê∫êÁ†Å‰ªìÂ∫ì ÁÇπÂáªÈ°πÁõÆ‰∏≠ SETTINGS ÈÄâÈ°πÂç°ÔºåÂ¶ÇÊûúÈ°πÁõÆÂàÜÊîØ‰∏çÊòØÈªòËÆ§ÁöÑÔºå‰øÆÊîπ Default branchÂÜçÁÇπÂáª Environment Ê†èÁõÆÔºåËÆæÁΩÆ4‰∏™ÁéØÂ¢ÉÂèòÈáèÔºö name value STATIC_SITE_REPO ÈùôÊÄÅÁΩëÂùÄÊñá‰ª∂Â≠òÊîægitÂú∞ÂùÄ TARGET_BRANCH ÂàÜÊîØÔºàÈªòËÆ§masterÔºâ GIT_USER_EMAIL gitË¥¶Âè∑ GIT_USER_NAME gitÂêçÁß∞ GitHub Ê∑ªÂä†Access TokenÂú®https://ci.appveyor.com/tools/encryptÈ°µÈù¢Âä†ÂØÜÈÖçÁΩÆCIÔºåÈ°πÁõÆÊ†πÁõÆÂΩïÊ∑ªÂä†appveyor.ymlclone_depth: 5 environment: access_token: secure: You Access Token matrix: - nodejs_version: &quot;12&quot; //Âõ†‰∏∫node 14ÁâàÊú¨ÁîüÊàêÈ°µÈù¢ÂíåÊñá‰ª∂‰∏∫Á©∫ÔºåËøôÈáåÊîπ‰∏∫12ÁâàÊú¨ install: - ps: Install-Product node $env:nodejs_version - node --version - npm --version - npm install - npm install hexo-cli -g build_script: - hexo generate artifacts: - path: public on_success: - git config --global credential.helper store - ps: Add-Content &quot;$env:USERPROFILE\\.git-credentials&quot; &quot;https://$($env:access_token):x-oauth-basic@github.com`n&quot; - git config --global user.email &quot;%GIT_USER_EMAIL%&quot; - git config --global user.name &quot;%GIT_USER_NAME%&quot; - git clone --depth 5 -q --branch=%TARGET_BRANCH% %STATIC_SITE_REPO% %TEMP%\\static-site - cd %TEMP%\\static-site - del * /f /q - for /d %%p IN (*) do rmdir &quot;%%p&quot; /s /q - SETLOCAL EnableDelayedExpansion &amp; robocopy &quot;%APPVEYOR_BUILD_FOLDER%\\public&quot; &quot;%TEMP%\\static-site&quot; /e &amp; IF !ERRORLEVEL! EQU 1 (exit 0) ELSE (IF !ERRORLEVEL! EQU 3 (exit 0) ELSE (exit 1)) - git add -A - git commit -m &quot;Update Static Site&quot; - git push origin %TARGET_BRANCH% - appveyor AddMessage &quot;Static Site Updated&quot; ÊúÄÂêé‰ª£Á†ÅÊèê‰∫§Âà∞GitÔºåAppVeyor‰ºöËá™Âä®Êé•Êî∂Âà∞Êõ¥Êñ∞Âπ∂buildÊèê‰∫§Âà∞ÊåáÂÆöGit‰ªìÂ∫ì‰πãÂêéÊõ¥Êñ∞ÂçöÂÆ¢‰ª•Âèä‰ª£Á†ÅÂè™ÈúÄË¶ÅpushÂç≥ÂèØ","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"Â≠¶‰π†.NET Core JwtÊéàÊùÉ‰∏éÈâ¥ÊùÉ","slug":"DotNETCore_WebAPI_Jwt","date":"2021-03-03T01:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"DotNET/DotNETCore_WebAPI_Jwt/","link":"","permalink":"/DotNET/DotNETCore_WebAPI_Jwt/","excerpt":"Â§ßÊôö‰∏äÂÜôÁöÑÂçöÂÆ¢ÔºåÂÜÖÂÆπ‰∏çÊòØÂæàÁªÜËá¥ÔºåËÆ∞ÂΩï‰∏Ä‰∏™ÁÆÄÂçïÁöÑËøáÁ®ã","text":"Â§ßÊôö‰∏äÂÜôÁöÑÂçöÂÆ¢ÔºåÂÜÖÂÆπ‰∏çÊòØÂæàÁªÜËá¥ÔºåËÆ∞ÂΩï‰∏Ä‰∏™ÁÆÄÂçïÁöÑËøáÁ®ã È¶ñÂÖàÂÆâË£ÖjwtÊâÄÈúÄÁöÑNugetÂåÖMicrosoft.AspNetCore.Authentication.JwtBearer System.ldentityModel.Tokens.Jwt Ê†πÊçÆË¥¶Êà∑ÁîüÊàêtokenÁöÑÊñπÊ≥ï/// &lt;summary&gt; /// Ëé∑Âèñtoken /// &lt;/summary&gt; /// &lt;param name=&quot;username&quot;&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public static string GetToken(string username) { if (!string.IsNullOrEmpty(username)) { var claims = new[] { new Claim(JwtRegisteredClaimNames.Sub,username), new Claim(JwtRegisteredClaimNames.Jti,Guid.NewGuid().ToString()) }; var key = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(&quot;SDMC-CJAS1-SAD-DFSFA-SADHJVF-VF&quot;)); var creds = new SigningCredentials(key, SecurityAlgorithms.HmacSha256); var token = new JwtSecurityToken ( issuer: &quot;Admin&quot;,//Á≠æÂèë‰∫∫ audience: &quot;Admin&quot;,//Âèó‰ºó claims: claims, expires: DateTime.Now.AddMinutes(3),//ËøáÊúüÊó∂Èó¥ signingCredentials: creds ); return new JwtSecurityTokenHandler().WriteToken(token); } else { return &quot;Ë¥¶Âè∑‰∏çÂ≠òÂú®&quot;; } } ConfigureServicesÊ∑ªÂä†JWTÈ™åËØÅservices.AddAuthentication(JwtBearerDefaults.AuthenticationScheme) .AddJwtBearer(options =&gt; { options.TokenValidationParameters = new TokenValidationParameters { ValidateIssuer = true,//ÊòØÂê¶È™åËØÅIssuer ValidateAudience = true,//ÊòØÂê¶È™åËØÅAudience ValidateLifetime = true,//ÊòØÂê¶È™åËØÅÂ§±ÊïàÊó∂Èó¥ ClockSkew = TimeSpan.FromSeconds(3), ValidateIssuerSigningKey = true,//ÊòØÂê¶È™åËØÅSecurityKey ValidAudience = &quot;Admin&quot;,//Audience ValidIssuer = &quot;Admin&quot;,//IssuerÔºåËøô‰∏§È°πÂíåÂâçÈù¢Á≠æÂèëjwtÁöÑËÆæÁΩÆ‰∏ÄËá¥ IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(&quot;SDMC-CJAS1-SAD-DFSFA-SADHJVF-VF&quot;))//ÊãøÂà∞SecurityKey }; options.Events = new JwtBearerEvents { //Ê≠§Â§Ñ‰∏∫ÊùÉÈôêÈ™åËØÅÂ§±Ë¥•ÂêéËß¶ÂèëÁöÑ‰∫ã‰ª∂ OnChallenge = context =&gt; { //Ê≠§Â§Ñ‰ª£Á†Å‰∏∫ÁªàÊ≠¢.Net CoreÈªòËÆ§ÁöÑËøîÂõûÁ±ªÂûãÂíåÊï∞ÊçÆÁªìÊûúÔºåËøô‰∏™ÂæàÈáçË¶ÅÂì¶ÔºåÂøÖÈ°ª context.HandleResponse(); //Ëá™ÂÆö‰πâËá™Â∑±ÊÉ≥Ë¶ÅËøîÂõûÁöÑÊï∞ÊçÆÁªìÊûú var payload = JsonConvert.SerializeObject(new { code = 401, res = new { msg = &quot;TokenËøáÊúüÔºåËØ∑ÈáçÊñ∞ÁôªÂΩï!!!&quot; } }); //Ëá™ÂÆö‰πâËøîÂõûÁöÑÊï∞ÊçÆÁ±ªÂûã context.Response.ContentType = &quot;application/json&quot;; //Ëá™ÂÆö‰πâËøîÂõûÁä∂ÊÄÅÁ†ÅÔºåÈªòËÆ§‰∏∫401 ÊàëËøôÈáåÊîπÊàê 200 context.Response.StatusCode = StatusCodes.Status401Unauthorized; //ËæìÂá∫JsonÊï∞ÊçÆÁªìÊûú context.Response.WriteAsync(payload); return Task.FromResult(0); } }; }); ConfigureÊ∑ªÂä†jwtÈâ¥ÊùÉ//jwtÈâ¥ÊùÉ app.UseAuthentication(); //‰ΩøÁî®Ë∑®Âüü app.UseHttpsRedirection().UseCors(builder =&gt; builder.AllowAnyOrigin().AllowAnyMethod().AllowAnyHeader()); ÊúÄÂêéÊéßÂà∂Âô®Ê∑ªÂä†[Authorize]Áî®Êù•Èâ¥ÊùÉÂ¶ÇÊûúË¶Å‰ΩøÁî®SwaggerËøõË°åÈâ¥ÊùÉÔºåÂú®ConfigureServicesÈáåÈù¢ÁöÑservices.AddSwaggerGenÈáåÈù¢Âä†‰∏ä‰∏ãÈù¢ËøôÊÆµ‰ª£Á†ÅÂç≥ÂèØc.AddSecurityDefinition(&quot;Bearer&quot;, new OpenApiSecurityScheme { In = ParameterLocation.Header, Type = SecuritySchemeType.ApiKey, Description = &quot;Áõ¥Êé•Âú®‰∏ãÊ°Ü‰∏≠ËæìÂÖ•Bearer {token}ÔºàÊ≥®ÊÑè‰∏§ËÄÖ‰πãÈó¥ÊòØ‰∏Ä‰∏™Á©∫Ê†ºÔºâ&quot;, Name = &quot;Authorization&quot;, BearerFormat = &quot;JWT&quot;, Scheme = &quot;Bearer&quot; }); c.AddSecurityDefinition(&quot;Bearer&quot;, new OpenApiSecurityScheme { In = ParameterLocation.Header, Type = SecuritySchemeType.ApiKey, Description = &quot;Áõ¥Êé•Âú®‰∏ãÊ°Ü‰∏≠ËæìÂÖ•Bearer {token}ÔºàÊ≥®ÊÑè‰∏§ËÄÖ‰πãÈó¥ÊòØ‰∏Ä‰∏™Á©∫Ê†ºÔºâ&quot;, Name = &quot;Authorization&quot;, BearerFormat = &quot;JWT&quot;, Scheme = &quot;Bearer&quot; }); c.AddSecurityRequirement(new OpenApiSecurityRequirement { { new OpenApiSecurityScheme { Reference = new OpenApiReference { Type = ReferenceType.SecurityScheme, Id = &quot;Bearer&quot; } }, new string[] {} } });","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"WPF DataTableÂ∏ÆÂä©Á±ª","slug":"WPF_Learning_2","date":"2021-01-21T11:30:00.000Z","updated":"2021-11-02T08:51:09.494Z","comments":true,"path":"DotNET/WPF_Learning_2/","link":"","permalink":"/DotNET/WPF_Learning_2/","excerpt":"ÂàÜ‰∫´‰∏Ä‰∏ãWPF DataTableÂ∏ÆÂä©Á±ª","text":"ÂàÜ‰∫´‰∏Ä‰∏ãWPF DataTableÂ∏ÆÂä©Á±ª DataTableÂØºÂá∫CSV/// &lt;summary&gt; /// DataTableÂØºÂá∫CSV /// &lt;/summary&gt; /// &lt;param name=&quot;dt&quot;&gt;&lt;/param&gt; public void SaveCSV(DataTable dt) { SaveFileDialog saveFile = new SaveFileDialog(); saveFile.Title = &quot;‰øùÂ≠òÊñá‰ª∂&quot;; saveFile.Filter = &quot;CSVÊñá‰ª∂(*.csv) |*.csv |ÊâÄÊúâÊñá‰ª∂(*.*) |*.*&quot;; saveFile.FilterIndex = 1; if (saveFile.ShowDialog() == System.Windows.Forms.DialogResult.OK) { string fileName = saveFile.FileName; if (File.Exists(fileName)) { File.Delete(fileName); } FileStream fs = null; StreamWriter sw = null; //ÂÖàÊâìÂç∞Ê†áÂ§¥ StringBuilder strColu = new StringBuilder(); StringBuilder strValue = new StringBuilder(); int i = 0; try { fs = new FileStream(fileName, FileMode.Create, FileAccess.Write); sw = new StreamWriter(fs, Encoding.Default); for (i = 0; i &lt;= dt.Columns.Count - 1; i++) { strColu.Append(dt.Columns[i].ColumnName); strColu.Append(&quot;,&quot;); } strColu.Remove(strColu.Length - 1, 1);//ÁßªÂá∫ÊéâÊúÄÂêé‰∏Ä‰∏™,Â≠óÁ¨¶ sw.WriteLine(strColu); foreach (DataRow dr in dt.Rows) { strValue.Remove(0, strValue.Length);//ÁßªÂá∫ for (i = 0; i &lt;= dt.Columns.Count - 1; i++) { strValue.Append(ReplaceChar(dr[i] == DBNull.Value ? &quot;&quot; : dr[i].ToString())); strValue.Append(&quot;,&quot;); } strValue.Remove(strValue.Length - 1, 1);//ÁßªÂá∫ÊéâÊúÄÂêé‰∏Ä‰∏™,Â≠óÁ¨¶ sw.WriteLine(strValue.ToString()); } sw.Close(); } catch (Exception ex) { System.Windows.MessageBox.Show(ex.Message.ToString()); } System.Windows.Forms.MessageBox.Show(&quot;‰øùÂ≠òCSVÊàêÂäü&quot;, &quot;ÊèêÁ§∫&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information); } } /// &lt;summary&gt; /// Èò≤Ê≠¢‰∏≤Âàó /// &lt;/summary&gt; /// &lt;param name=&quot;str&quot;&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; private string ReplaceChar(string str) { string field = str; if (field.IndexOf(&quot;+&quot;) == 0 || field.IndexOf(&quot;-&quot;) == 0 || field.IndexOf(&quot;=&quot;) == 0 || field.IndexOf(&quot;&#39;&quot;) == 0) { if (IsNum(field)) { return field; } return string.Format(&quot;\\t{0}&quot;, field); } if (field.IndexOf(&#39;,&#39;) &gt;= 0) { return string.Format(&quot;\\&quot;{0}\\&quot;&quot;, field); } if (field.IndexOf(&#39;&quot;&#39;) &gt;= 0) { return string.Format(&quot;\\t{0}&quot;, field); } if (field.IndexOf(&#39;\\r&#39;) &gt;= 0) { return string.Format(&quot;\\&quot;{0}\\&quot;&quot;, field); } if (field.IndexOf(&#39;\\n&#39;) &gt;= 0) { return string.Format(&quot;\\&quot;{0}\\&quot;&quot;, field); } if (field.IndexOf(&#39;\\&quot;&#39;) &gt;= 0) { return string.Format(&quot;\\&quot;{0}\\&quot;&quot;, field); } if (field != field.Trim()) { return string.Format(&quot;\\&quot;{0}\\&quot;&quot;, field); } return field; } private bool IsNum(object num) { try { Convert.ToDecimal(num); return true; } catch { return false; } } DataTableËΩ¨Excel/// &lt;summary&gt; /// DataTableËΩ¨Excel /// &lt;/summary&gt; /// &lt;param name=&quot;m_DataTable&quot;&gt;&lt;/param&gt; public void DataToExcel(DataTable m_DataTable) { SaveFileDialog saveFile = new SaveFileDialog(); saveFile.Title = &quot;‰øùÂ≠òÊñá‰ª∂&quot;; saveFile.Filter = &quot;EXECLÊñá‰ª∂(*.xls) |*.xls |ÊâÄÊúâÊñá‰ª∂(*.*) |*.*&quot;; saveFile.FilterIndex = 1; if (saveFile.ShowDialog() == System.Windows.Forms.DialogResult.OK) { string FileName = saveFile.FileName; if (File.Exists(FileName)) { File.Delete(FileName); } FileStream objFileStream; StreamWriter objStreamWriter; string strLine = &quot;&quot;; objFileStream = new FileStream(FileName, FileMode.OpenOrCreate, FileAccess.Write); objStreamWriter = new StreamWriter(objFileStream, System.Text.Encoding.Unicode); for (int i = 0; i &lt; m_DataTable.Columns.Count; i++) { strLine = strLine + m_DataTable.Columns[i].Caption.ToString() + Convert.ToChar(9); } objStreamWriter.WriteLine(strLine); strLine = &quot;&quot;; for (int i = 0; i &lt; m_DataTable.Rows.Count; i++) { for (int j = 0; j &lt; m_DataTable.Columns.Count; j++) { if (m_DataTable.Rows[i].ItemArray[j] == null) { strLine = strLine + &quot; &quot; + Convert.ToChar(9); } else { string rowstr = &quot;&quot;; rowstr = m_DataTable.Rows[i].ItemArray[j].ToString(); if (rowstr.IndexOf(&quot;\\r\\n&quot;) &gt; 0) { rowstr = rowstr.Replace(&quot;\\r\\n&quot;, &quot; &quot;); } if (rowstr.IndexOf(&quot;\\t&quot;) &gt; 0) { rowstr = rowstr.Replace(&quot;\\t&quot;, &quot; &quot;); } strLine = strLine + rowstr + Convert.ToChar(9); } } objStreamWriter.WriteLine(strLine); strLine = &quot;&quot;; } objStreamWriter.Dispose(); objStreamWriter.Close(); objFileStream.Dispose(); objFileStream.Close(); System.Windows.Forms.MessageBox.Show(&quot;‰øùÂ≠òEXCELÊàêÂäü&quot;, &quot;ÊèêÁ§∫&quot;, MessageBoxButtons.OK, MessageBoxIcon.Information); } }","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"WPFÁü•ËØÜÁÇπ","slug":"WPF_Learning_1","date":"2021-01-20T16:30:00.000Z","updated":"2021-11-02T08:51:09.494Z","comments":true,"path":"DotNET/WPF_Learning_1/","link":"","permalink":"/DotNET/WPF_Learning_1/","excerpt":"2021È¶ñÂèë","text":"2021È¶ñÂèë 1. È¶ñÂÖàÂÜô‰∏Ä‰∏™ListËΩ¨DataTableÁöÑÊñπÊ≥ïpublic DataTable ListToDt&lt;T&gt;(IEnumerable&lt;T&gt; collection) { var props = typeof(T).GetProperties(); var dt = new DataTable(); dt.Columns.AddRange(props.Select(p =&gt; new DataColumn(p.Name, p.PropertyType)).ToArray()); if (collection.Count() &gt; 0) { for (int i = 0; i &lt; collection.Count(); i++) { ArrayList tempList = new ArrayList(); foreach (PropertyInfo pi in props) { object obj = pi.GetValue(collection.ElementAt(i), null); tempList.Add(obj); } object[] array = tempList.ToArray(); dt.LoadDataRow(array, true); } } return dt; } ÁÑ∂ÂêéÂÆö‰πâ‰∏Ä‰∏™listpublic List&lt;Teacher&gt; list = new List&lt;Teacher&gt;(); public class Teacher { public string Name { get; set; } public string Password { get; set; } } ÊñπÊ≥ïÂÜÖË∞ÉÁî®DataTable dt = ListToDt(list); DataView dv = new DataView(dt); ËøôÊ†∑‰∏Ä‰∏™ListÂ∞±ËΩ¨Êàê‰∫ÜDataView2. ÁÑ∂ÂêéÊòØDataTableË°åËΩ¨ÂàóÁöÑÊñπÊ≥ïprivate DataTable SwapTable(DataTable tableData) { int intRows = tableData.Rows.Count; int intColumns = tableData.Columns.Count; //ËΩ¨‰∫åÁª¥Êï∞ÁªÑ string[,] arrayData = new string[intRows, intColumns]; for (int i = 0; i &lt; intRows; i++) { for (int j = 0; j &lt; intColumns; j++) { arrayData[i, j] = tableData.Rows[i][j].ToString(); } } //‰∏ãÊ†áÂØπÊç¢ string[,] arrSwap = new string[intColumns, intRows]; for (int m = 0; m &lt; intColumns; m++) { for (int n = 0; n &lt; intRows; n++) { arrSwap[m, n] = arrayData[n, m]; } } DataTable dt = new DataTable(); //Ê∑ªÂä†Âàó for (int k = 0; k &lt; intRows; k++) { dt.Columns.Add(new DataColumn(arrSwap[0, k])); } //Ê∑ªÂä†Ë°å for (int r = 1; r &lt; intColumns; r++) { DataRow dr = dt.NewRow(); for (int c = 0; c &lt; intRows; c++) { dr[c] = arrSwap[r, c].ToString(); } dt.Rows.Add(dr); } //Ê∑ªÂä†Ë°åÂ§¥ DataColumn ColRowHead = new DataColumn(tableData.Columns[0].ColumnName); dt.Columns.Add(ColRowHead); dt.Columns[ColRowHead.ColumnName].SetOrdinal(0); for (int i = 0; i &lt; intColumns - 1; i++) { dt.Rows[i][ColRowHead.ColumnName] = tableData.Columns[i + 1].ColumnName; } return dt; } 3. WPFËé∑ÂèñÈÄâ‰∏≠ÊüêË°åÁöÑÂÄº/// &lt;summary&gt; /// ÈÄâ‰∏≠‰∫ã‰ª∂ /// &lt;/summary&gt; /// &lt;param name=&quot;sender&quot;&gt;&lt;/param&gt; /// &lt;param name=&quot;e&quot;&gt;&lt;/param&gt; private void dataGrid_SelectedCellsChanged(object sender, SelectedCellsChangedEventArgs e) { DataRowView mySelectedItem = (DataRowView)dataGrid.SelectedItem; //Âà§Êñ≠ÊúâÊ≤°ÊúâÈÄâ‰∏≠ if (mySelectedItem != null) { DataRow result = mySelectedItem.Row; DataTable dataTableNew = dataTable.Clone(); dataTableNew.ImportRow(result); this.dataGrid1.ItemsSource = new DataView(dataTableNew); } } 4. DataTableÁ≠õÈÄâÊï∞ÊçÆDataRow[] dr = dataTable.Select(&quot;Name =&#39;Âº†‰∏â&#39;&quot;, &quot;Time DESC&quot;); DataTable dataTableNew = dataTable.Clone(); for (int i = 0; i &lt; dr.Length; i++) { dataTableNew.ImportRow(dr[i]); } this.dataGrid1.ItemsSource = new DataView(dataTableNew); 5. TextBoxÂÆûÊó∂Êõ¥Êñ∞BindingÁöÑPropertyText=&quot;{Binding SearchText,UpdateSourceTrigger=PropertyChanged}&quot;","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"C#Ëé∑ÂèñÊåáÂÆöÊñá‰ª∂Â§πÊâÄÊúâÊñá‰ª∂","slug":"CSharp_File","date":"2020-12-30T17:00:00.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"DotNET/CSharp_File/","link":"","permalink":"/DotNET/CSharp_File/","excerpt":"2020Âø´ËøáÂÆå‰∫ÜÔºåËµ∂Á¥ßÊ∞¥‰∏ÄÁØáÂçöÂÆ¢","text":"2020Âø´ËøáÂÆå‰∫ÜÔºåËµ∂Á¥ßÊ∞¥‰∏ÄÁØáÂçöÂÆ¢ //Ëé∑ÂèñÊ°åÈù¢Ë∑ØÂæÑ string desktop = Environment.GetFolderPath(Environment.SpecialFolder.Desktop); string path = string.Format(@&quot;{0}\\{1}&quot;, desktop, &quot;Âä†ÂØÜÂâç&quot;); DirectoryInfo folder = new DirectoryInfo(path); //‰ªéË∑ØÂæÑ‰∏ãÂæ™ÁéØËé∑ÂèñÊñá‰ª∂ foreach(FileInfo file in folder.GetFiles()) { //ÊâìÂç∞Êñá‰ª∂Ë∑ØÂæÑÂà∞ÊéßÂà∂Âè∞ Console.WriteLine(file.FullName); } Console.ReadKey(); ÊéßÂà∂Âè∞ÊâìÂç∞‰ø°ÊÅØ ÂæàÊòéÊòæÔºåËøô‰∏™ÊâìÂç∞ÁöÑÈ°∫Â∫èÂ∞±‰∏çÂØπÂèØ‰ª•Á®çÂä†‰øÆÊîπ‰∏Ä‰∏ãÔºåÂÜôÂÖ•Âà∞txtstring desktop = Environment.GetFolderPath(Environment.SpecialFolder.Desktop); string path = string.Format(@&quot;{0}\\{1}&quot;, desktop, &quot;Âä†ÂØÜÂâç&quot;); DirectoryInfo folder = new DirectoryInfo(path); StreamWriter txt; if (File.Exists(desktop + &quot;\\\\&quot; + &quot;Ë∑ØÂæÑ.txt&quot;)) { //ÊääÂéüÊù•ÁöÑÂà†ÊéâÈáçÊñ∞ÂàõÂª∫‰∏Ä‰∏™ File.Delete(desktop + &quot;\\\\&quot; + &quot;Ë∑ØÂæÑ.txt&quot;); txt = File.CreateText(desktop + &quot;\\\\&quot; + &quot;Ë∑ØÂæÑ.txt&quot;); } else { //ÂàõÂª∫-&gt;Ë∑ØÂæÑ.txt txt = File.CreateText(desktop + &quot;\\\\&quot; + &quot;Ë∑ØÂæÑ.txt&quot;); } List&lt;string&gt; fileNameList = new List&lt;string&gt;(); foreach (FileInfo file in folder.GetFiles()) { //ÂÜôÂÖ•Âà∞listÈáåÈù¢Â≠òÂÇ® fileNameList.Add(file.FullName); } //ÂàõÂª∫‰∏Ä‰∏™Êï∞ÁªÑ string[] list=new string[fileNameList.Count]; //ÊäälistÂÄºÂä†Âà∞Êï∞ÁªÑ for(int i = 0; i &lt; fileNameList.Count; i++) { list[i] = fileNameList[i]; } //Ë∞ÉÁî®ÊéíÂ∫èÊñπÊ≥ï Array.Sort(list, new FileNameSort()); foreach(var fileUrl in list) { //ÂÜôÂÖ•txt txt.WriteLine(fileUrl); Console.WriteLine(fileUrl); } //ÈáäÊîæËµÑÊ∫ê txt.Close(); txt.Dispose(); Console.ReadKey(); ËøôÈáåËØ¥‰∏Ä‰∏ã‰∏∫Âï•Ë¶ÅÂàõÂª∫listÂíåÊï∞ÁªÑÂõ†‰∏∫Áúã‰∏äÂõæÈ°∫Â∫èÊòØ‰π±ÁöÑÔºåÊâÄ‰ª•Â∞±ÊéíÂ∫è‰∫Ü‰∏Ä‰∏ã Ëøô‰∏ÄÊ¨°Â∞±Ê≤°ÈóÆÈ¢ò‰∫Ü ÂåÖÊã¨ÊñáÊú¨ÂÜôÂÖ•‰πüÊ≠£Â∏∏ÊéíÂ∫èÁöÑÊñπÊ≥ïpublic class FileNameSort : IComparer { //Ë∞ÉÁî®windos ÁöÑ DLL [System.Runtime.InteropServices.DllImport(&quot;Shlwapi.dll&quot;, CharSet = CharSet.Unicode)] private static extern int StrCmpLogicalW(string param1, string param2); //ÂâçÂêéÊñá‰ª∂ÂêçËøõË°åÊØîËæÉ„ÄÇ public int Compare(object name1, object name2) { if (null == name1 &amp;&amp; null == name2) { return 0; } if (null == name1) { return -1; } if (null == name2) { return 1; } return StrCmpLogicalW(name1.ToString(), name2.ToString()); } }","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"WindowsÊúçÂä°Âô®Êê≠Âª∫ÁßÅ‰∫∫GitLab","slug":"GitLab_Windows10","date":"2020-10-11T21:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Other/GitLab_Windows10/","link":"","permalink":"/Other/GitLab_Windows10/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ãWindowsÊúçÂä°Âô®Êê≠Âª∫ÁßÅ‰∫∫GitLab","text":"ËÆ∞ÂΩï‰∏Ä‰∏ãWindowsÊúçÂä°Âô®Êê≠Âª∫ÁßÅ‰∫∫GitLab WindowsÊúçÂä°Âô®Êê≠Âª∫GitLabÈúÄË¶ÅÂÆâË£ÖJavaÁéØÂ¢ÉJavaÁéØÂ¢É‰∏ãËΩΩGitblit-1.9.1.zip ‰∏ãËΩΩJavaJDKÂπ∂ÈÖçÁΩÆÁéØÂ¢ÉÊ≠§ÁîµËÑë-&gt;Â±ûÊÄß-&gt;È´òÁ∫ßÁ≥ªÁªüËÆæÁΩÆ-&gt;ÁéØÂ¢ÉÂèòÈáè-&gt;Ê∑ªÂä†ÂèòÈáèÂêçÔºöJAVA_HOME ÂèòÈáèÂÄºÔºöÁîµËÑë‰∏äJDKÂÆâË£ÖÁöÑÁªùÂØπË∑ØÂæÑ ÂèòÈáèÂêçÔºöCLASSPATH ÂèòÈáèÂÄºÔºö.;%JAVA_HOME%\\lib\\dt.jar;%JAVA_HOME%\\lib\\tools.jar; ÈÄâÊã©pathËøô‰∏ÄÂàóÁÇπÁºñËæë ÁÑ∂ÂêéÊñ∞Â¢û‰∏§Ë°å %JAVA_HOME%\\bin %JAVA_HOME%\\jre\\bin ÊâìÂºÄcmdËæìÂÖ•java -versionÊü•ÁúãÁâàÊú¨Âè∑ÔºåÊ≤°ÊúâÈîôËØØËØ¥ÊòéÂÆâË£ÖÊàêÂäüÊâìÂºÄdataÊñá‰ª∂Â§πÁºñËæëÊâæÂà∞defaults.propertiesÈÖçÁΩÆÊñá‰ª∂# ËÆæÁΩÆÁâàÊú¨Â∫ìÁöÑ‰ΩçÁΩÆ git.repositoriesFolder = ‰Ω†Ë¶ÅÁöÑË∑ØÂæÑ # ËÆæÁΩÆÁ´ØÂè£Âè∑ server.httpPort = Á´ØÂè£Âè∑ # ËÆæÁΩÆipÂú∞ÂùÄ server.httpBindInterface = Êú¨Êú∫ipv4 server.certificateAlias = localhost ‰øÆÊîπinstallService.cmdÊñá‰ª∂@REM arch = x86, amd64, or ia32 SET ARCH=amd64 SET CD = C:\\WebFile\\GitLab --(GitLabËß£ÂéãÂêéÁöÑË∑ØÂæÑ) ÁÑ∂ÂêéÂú®ÂëΩ‰ª§Á™óÂè£ËøêË°ågitlab.cmdÔºàÂàáËÆ∞cmdÁ™óÂè£‰∏çËÉΩÂÖ≥Èó≠ÔºâÊúÄÂêé‰ª•ÁÆ°ÁêÜÂëòË¥¶Âè∑ÁôªÈôÜÔºåÂ∞±ÂèØ‰ª•Ëá™Â∑±Ê∑ªÂä†Â≠òÂÇ®Â∫ì‰∫ÜÔºåÁÑ∂ÂêéËá™Ë°åÊãâÂèñÊèê‰∫§Êé®ÈÄÅ","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":".NET Core WebAPI‰ΩøÁî®EFCoreËøûÊé•MySQL","slug":"DotNETCore_WebAPI_EFCore_MySQL","date":"2020-07-09T18:00:00.000Z","updated":"2021-11-02T08:51:09.385Z","comments":true,"path":"DotNET/DotNETCore_WebAPI_EFCore_MySQL/","link":"","permalink":"/DotNET/DotNETCore_WebAPI_EFCore_MySQL/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ã.NET Core‰ΩøÁî®EFCoreËøûÊé•MySQLÊï∞ÊçÆÂ∫ì","text":"ËÆ∞ÂΩï‰∏Ä‰∏ã.NET Core‰ΩøÁî®EFCoreËøûÊé•MySQLÊï∞ÊçÆÂ∫ì È¶ñÂÖà‰ªénugetÂåÖÈáåÈù¢ÊâæÂà∞MySQL.Data.EntityFrameworkCoreËøõË°åÂÆâË£Ö Âõ†‰∏∫ÊàëÁöÑ.NET CoreÊòØÊúÄÊñ∞ÁâàÊú¨3.1ÔºåÊâÄ‰ª•Ëøô‰∏™EFCoreÊàëÂÆâË£ÖÁöÑ‰πüÊòØÊúÄÊñ∞ÁâàÊú¨8.0.20Á¨¨‰∏ÄÊ≠•Âú®ÈÖçÁΩÆÊñá‰ª∂appsettings.jsonÈáåÈù¢Ê∑ªÂä†ËøûÊé•Â≠óÁ¨¶‰∏≤&quot;ConnectionStrings&quot;: { &quot;MySQLConnection&quot;: &quot;server=Êú¨Âú∞ÊàñËÄÖÁ∫ø‰∏äÂú∞ÂùÄ;uid=Áî®Êà∑Âêç;pwd=ÂØÜÁ†Å;port=Á´ØÂè£Âè∑;database=ÈúÄË¶ÅËøûÊé•ÁöÑÊï∞ÊçÆÂ∫ìÂêçÁß∞;SslMode=None&quot; } Á¨¨‰∫åÊ≠•Ê∑ªÂä†Êï∞ÊçÆÂ∫ì‰∏ä‰∏ãÊñáÁ±ªpublic class EFCoreDbContext:DbContext { public virtual DbSet&lt;UserInfo&gt; Users { get; set; } //Â∞ÜÂÆû‰ΩìÁ±ªÊ∑ªÂä†Context‰∏≠ public EFCoreDbContext(DbContextOptions&lt;EFCoreDbContext&gt; options) : base(options) { } } Á¨¨‰∏âÊ≠•Startup.csÈáåÈù¢ÁöÑConfigureServicesÊñπÊ≥ï‰∏ãÈù¢ËØªÂèñÊúçÂä°Ê∑ªÂä†Âà∞ÂÆπÂô®services.AddDbContext&lt;EFCoreDbContext&gt;(options =&gt; options.UseMySQL(Configuration.GetConnectionString(&quot;MySQLConnection&quot;))); ÊúÄÂêéÂú®ÈúÄË¶Å‰ΩøÁî®Âà∞Êï∞ÊçÆÂ∫ìÁöÑÊéßÂà∂Âô®ÂÜÖÊ∑ªÂä†ÊûÑÈÄ†ÂáΩÊï∞ÔºåÂàùÂßãÂåñÊï∞ÊçÆÂ∫ì‰∏ä‰∏ãÊñáÁ±ª/// &lt;summary&gt; /// ÂàùÂßãÂåñÊï∞ÊçÆÂ∫ì‰∏ä‰∏ãÊñá /// &lt;/summary&gt; private readonly EFCoreDbContext _efCoreDbContext; /// &lt;summary&gt; /// ÊûÑÈÄ†ÂèäÂàùÂßãÂåñÁ±ªÂèÇÊï∞ /// &lt;/summary&gt; public ImageController(EFCoreDbContext coreDbContext) { _efCoreDbContext = coreDbContext; } ÊúÄÂêéÊé•Âè£ÈÄöËøá‰∏ä‰∏ãÊñáÁ±ªÂèñÂá∫Áõ∏Â∫îÁöÑÊï∞ÊçÆÔºåÂ¶ÇÊûúÊï∞ÊçÆ‰∏ç‰∏∫Á©∫ÂàôËøûÊé•ÊàêÂäü2021Âπ¥6Êúà29Êó•ÈáçÊñ∞ÊâìÂºÄÈ°πÁõÆÂèëÁé∞MySql.Data.EntityFrameworkCoreÂ∑≤ÂºÉÁî®ÊääËøô‰∏™NugetÂåÖÂà†ÊéâÂÆâË£ÖMySQL.EntityFrameworkCoreÂ∞±Â•Ω‰∫Ü","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":".NET Core WebAPIÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ","slug":"DotNETCore_WebAPI_Exception","date":"2020-07-03T16:00:00.000Z","updated":"2021-11-02T08:51:09.385Z","comments":true,"path":"DotNET/DotNETCore_WebAPI_Exception/","link":"","permalink":"/DotNET/DotNETCore_WebAPI_Exception/","excerpt":"‰ªäÂ§©ËÆ∞ÂΩï‰∏Ä‰∏ã.NET Core WebAPIÁöÑÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ","text":"‰ªäÂ§©ËÆ∞ÂΩï‰∏Ä‰∏ã.NET Core WebAPIÁöÑÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ ‰∏ä‰ª£Á†ÅÔºåÂÖàÂàõÂª∫‰∏Ä‰∏™Á±ªÔºåÂëΩÂêçÂ∞±Âè´ExceptionFilterÁªßÊâø‰∫éExceptionFilterAttributepublic class ExceptionFilter:ExceptionFilterAttribute { public override void OnException(ExceptionContext context) { if (!context.ExceptionHandled) { context.Result = new JsonResult(new { Code = &quot;500&quot;, Res = new { Data = context.Exception.Message, Msg = &quot;Êé•Âè£ÂèëÁîüÈîôËØØ&quot; } }); context.ExceptionHandled = true; } } } ÁÑ∂ÂêéÂú®StartupÁ±ª‰∏ãÈù¢ÁöÑConfigureServicesÊñπÊ≥ï‰∏ãÈù¢ÂÖ®Â±ÄÊ≥®ÂÜå‰∏Ä‰∏ã// Ê≠§ÊñπÊ≥ïÁî±ËøêË°åÊó∂Ë∞ÉÁî®Ôºå‰ΩøÁî®Ê≠§ÊñπÊ≥ïÂ∞ÜÊúçÂä°Ê∑ªÂä†Âà∞ÂÆπÂô® public void ConfigureServices(IServiceCollection services) { services.AddControllers(); //ÂÖ®Â±ÄÈÖçÁΩÆJsonÂ∫èÂàóÂåñÂ§ßÂ∞èÂÜôÂ§ÑÁêÜ services.AddMvc().AddJsonOptions(options =&gt; { options.JsonSerializerOptions.PropertyNamingPolicy = null; options.JsonSerializerOptions.DictionaryKeyPolicy = null; }); //ÂÖ®Â±ÄÊ≥®ÂÜåÂºÇÂ∏∏Á±ª services.AddMvc(options =&gt; { options.Filters.Add&lt;ExceptionFilter&gt;(); }); //Ëß£ÂÜ≥‰∏≠ÊñáË¢´ÁºñÁ†Å services.AddControllersWithViews().AddJsonOptions(options =&gt; { options.JsonSerializerOptions.Encoder = JavaScriptEncoder.Create(UnicodeRanges.All); }); } ‰∏∫‰∫ÜÈò≤Ê≠¢ËøîÂõûÁöÑJsonÂ§ßÂ∞èÂÜô‰∏çÂåπÈÖçÔºåÊàëËøòÂä†‰∫ÜJsonÂ§ßÂ∞èÂÜôÂ§ÑÁêÜÔºåÁ°ÆÂÆöJsonËæìÂá∫ÂíåÂêéÂè∞ÂÆö‰πâÁöÑÊ†ºÂºè‰ª•ÂèäÂ§ßÂ∞èÂÜô‰∏ÄËá¥ÔºåÂíåËøîÂõûÁöÑ‰∏≠Êñá‰π±Á†ÅÊÉÖÂÜµÂú®Êé•Âè£Êä•ÈîôÁöÑÊó∂ÂÄô‰ºöËøîÂõûÂêéÂè∞Âõ∫ÂÆöÁöÑCodeÔºåÁî®Êù•Âà§Êñ≠Êé•Âè£Áä∂ÊÄÅ","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":".NET Core ÈÉ®ÁΩ≤IIS","slug":"DotNETCore_IIS","date":"2020-06-10T15:30:00.000Z","updated":"2021-11-02T08:51:09.385Z","comments":true,"path":"DotNET/DotNETCore_IIS/","link":"","permalink":"/DotNET/DotNETCore_IIS/","excerpt":"ËÆ∞ÂΩï.NET CoreÈÉ®ÁΩ≤IISÈÅáÂà∞ÁöÑÂùë","text":"ËÆ∞ÂΩï.NET CoreÈÉ®ÁΩ≤IISÈÅáÂà∞ÁöÑÂùë VS2019ÂèëÂ∏ÉÈ°πÁõÆÂà∞Êñá‰ª∂Â§πÔºåÁÑ∂ÂêéÊã∑Ë¥ùÂà∞ÊúçÂä°Âô®ÔºåËøô‰∫õÊ≠£Â∏∏ÊµÅÁ®ãÁªìÊùüÂêéËÆøÈóÆapiÔºåÂá∫Áé∞‰ª•‰∏ãÊÉÖÂÜµÁ¨¨‰∏ÄÁßç500ÈîôËØØ Á¨¨‰∫åÁßç502ÈîôËØØ ÁôæÂ∫¶‰∫ÜÂæàÂ§öÂæóÂà∞‰ª•‰∏ãËß£ÂÜ≥ÊñπÊ°àÁÇπÂáª‰∏ãËΩΩÔºödotnet-hosting-3.1.5-win.exe ‰∏ãËΩΩÂπ∂‰∏îÂÆâË£Ö.NET CoreÊâòÁÆ°ÊçÜÁªëÂåÖÂÆâË£ÖÁ®ãÂ∫èÈáçÊñ∞ÂêØÂä®IISÊàñËÄÖÈáçÊñ∞Ê∑ªÂä†ÁΩëÁ´ôÔºåÂèëÂ∏ÉÂêØÂä®Âç≥ÂèØËÆøÈóÆÊàêÂäü","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"MySQLÂíåSQL ServerÂ≠òÂÇ®ËøáÁ®ã","slug":"MySQL_MSSQL_Stored_Procedure","date":"2020-05-11T17:40:00.000Z","updated":"2021-11-02T08:51:09.416Z","comments":true,"path":"SQL/MySQL_MSSQL_Stored_Procedure/","link":"","permalink":"/SQL/MySQL_MSSQL_Stored_Procedure/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ãÊï∞ÊçÆÂ∫ìÂ≠òÂÇ®ËøáÁ®ã","text":"ËÆ∞ÂΩï‰∏Ä‰∏ãÊï∞ÊçÆÂ∫ìÂ≠òÂÇ®ËøáÁ®ã MySQLÂàõÂª∫Â∏¶Êù°‰ª∂Êü•ËØ¢ÁöÑÂ≠òÂÇ®ËøáÁ®ãDELIMITER $$ CREATE PROCEDURE `Êï∞ÊçÆÂ∫ìÂêç`.`Â≠òÂÇ®ËøáÁ®ãÂêç`(IN Ëá™ÂÆö‰πâÂèÇÊï∞ VARCHAR(200)) BEGIN SELECT * FROM Ë°®Âêç WHERE Â≠óÊÆµ = Ëá™ÂÆö‰πâÂèÇÊï∞; END$$ DELIMITER ; Ë∞ÉÁî®Âπ∂‰º†ÂèÇCALL Â≠òÂÇ®ËøáÁ®ãÂêç(&#39;ÂèÇÊï∞ÂÄº&#39;) Âà†Èô§Â≠òÂÇ®ËøáÁ®ãDROP PROCEDURE Â≠òÂÇ®ËøáÁ®ãÂêç SQL ServerÂàõÂª∫Â∏¶Êù°‰ª∂Êü•ËØ¢ÁöÑÂ≠òÂÇ®ËøáÁ®ãcreate proc Â≠òÂÇ®ËøáÁ®ãÂêç @Ëá™ÂÆö‰πâÂèÇÊï∞ varchar(200) as select * from Ë°®Âêç where Â≠óÊÆµ=@Ëá™ÂÆö‰πâÂèÇÊï∞ go Ë∞ÉÁî®Âπ∂‰º†ÂèÇEXEC Â≠òÂÇ®ËøáÁ®ãÂêç &#39;ÂèÇÊï∞ÂÄº&#39; Âà†Èô§Â≠òÂÇ®ËøáÁ®ãdrop proc Â≠òÂÇ®ËøáÁ®ãÂêç","categories":[{"name":"SQL","slug":"SQL","permalink":"/categories/SQL/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"SQL","slug":"SQL","permalink":"/categories/SQL/"}]},{"title":"vue+elementuiÈÅáÂà∞ÁöÑÂùë","slug":"Vue_Learning_2","date":"2020-04-24T21:30:00.000Z","updated":"2021-11-02T08:51:09.494Z","comments":false,"path":"Vue/Vue_Learning_2/","link":"","permalink":"/Vue/Vue_Learning_2/","excerpt":"ÂÖ•Èó®vueÔºåÁ¨¨‰∫åÁØá","text":"function doDecrypt (pwd, onError) { const txt = document.getElementById('enc_content').innerHTML; let plantext; try { const bytes = CryptoJS.AES.decrypt(txt, pwd); var plaintext = bytes.toString(CryptoJS.enc.Utf8); } catch(err) { if(onError) { onError(err); } return; } document.getElementById('enc_content').innerHTML = plaintext; document.getElementById('enc_content').style.display = 'block'; document.getElementById('enc_passwd').style.display = 'none'; if(typeof MathJax !== 'undefined') { MathJax.Hub.Queue( ['resetEquationNumbers', MathJax.InputJax.TeX], ['PreProcess', MathJax.Hub], ['Reprocess', MathJax.Hub] ); } }  var onError = function(error) { document.getElementById(\"enc_error\").innerHTML = \"ÂØÜÁ†Å‰∏çÂØπÂì¶!\" }; function decrypt() { var passwd = document.getElementById(\"enc_pwd_input\").value; doDecrypt(passwd, onError); }","categories":[{"name":"Vue","slug":"Vue","permalink":"/categories/Vue/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Vue","slug":"Vue","permalink":"/categories/Vue/"}]},{"title":"Â≠¶‰π†vueÈÅáÂà∞ÁöÑÂùë","slug":"Vue_Learning_1","date":"2020-04-23T16:25:00.000Z","updated":"2021-11-02T08:51:09.494Z","comments":false,"path":"Vue/Vue_Learning_1/","link":"","permalink":"/Vue/Vue_Learning_1/","excerpt":"ÂÖ•Èó®VueÔºåÁ¨¨‰∏ÄÁØá","text":"function doDecrypt (pwd, onError) { const txt = document.getElementById('enc_content').innerHTML; let plantext; try { const bytes = CryptoJS.AES.decrypt(txt, pwd); var plaintext = bytes.toString(CryptoJS.enc.Utf8); } catch(err) { if(onError) { onError(err); } return; } document.getElementById('enc_content').innerHTML = plaintext; document.getElementById('enc_content').style.display = 'block'; document.getElementById('enc_passwd').style.display = 'none'; if(typeof MathJax !== 'undefined') { MathJax.Hub.Queue( ['resetEquationNumbers', MathJax.InputJax.TeX], ['PreProcess', MathJax.Hub], ['Reprocess', MathJax.Hub] ); } } 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 var onError = function(error) { document.getElementById(\"enc_error\").innerHTML = \"ÂØÜÁ†Å‰∏çÂØπÂì¶!\" }; function decrypt() { var passwd = document.getElementById(\"enc_pwd_input\").value; doDecrypt(passwd, onError); }","categories":[{"name":"Vue","slug":"Vue","permalink":"/categories/Vue/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Vue","slug":"Vue","permalink":"/categories/Vue/"}]},{"title":"MVCËøûÊé•MySQLÊïôÁ®ã","slug":"MySQL_MVC5_EF6","date":"2020-04-14T16:16:16.000Z","updated":"2021-11-02T08:51:09.416Z","comments":true,"path":"SQL/MySQL_MVC5_EF6/","link":"","permalink":"/SQL/MySQL_MVC5_EF6/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ãMVC+EFËøûÊé•MySQLÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÆâË£ÖÁöÑÊèí‰ª∂","text":"ËÆ∞ÂΩï‰∏Ä‰∏ãMVC+EFËøûÊé•MySQLÊï∞ÊçÆÂ∫ìÈúÄË¶ÅÂÆâË£ÖÁöÑÊèí‰ª∂ ÂáÜÂ§á‰ª•‰∏ãÊñá‰ª∂ ÁÇπÂáª‰∏ãËΩΩÔºömysql-connector-net-6.9.12.msi ÁÇπÂáª‰∏ãËΩΩÔºömysql-for-visualstudio-1.2.8.msi MySQL DataÂíåMySQL Data EntityÔºàNuGetËøõË°åÂÆâË£ÖÔºåËøôËæπË£ÖÁöÑÁâàÊú¨ÈÉΩÊòØ6.9.12Ôºâ Âú®modelÊñá‰ª∂Â§πÂè≥ÂáªÊ∑ªÂä†Êñ∞Âª∫È°πÔºåÈÄâÊã©ADO.NETÂÆû‰ΩìÊï∞ÊçÆÊ®°Âûã ÈÄâÊã©Êù•Ëá™Êï∞ÊçÆÂ∫ìÁöÑEFËÆæËÆ°Âô® Êñ∞Âª∫ËøûÊé•ÔºåÊõ¥ÊîπÊï∞ÊçÆÊ∫êÔºåÈÄâÊã©MySQL DatabaseÔºåËøûÊé•MySQLÊúçÂä°Âô® Ê≥®ÊÑèÔºöËøôÈáåÂ¶ÇÊûú‰∏ã‰∏ÄÊ≠•Êó∂ÔºåÂá∫Áé∞Èó™ÈÄÄÔºåÂàôË¶ÅÊ£ÄÊü•MySQL DataÂíåMySQL Data EntityÁâàÊú¨„ÄÇÈÄâÊã©ÊâÄÊúâË°® ÁÑ∂ÂêéÁÇπÂáªÂÆåÊàêÂç≥ÂèØÁîüÊàê","categories":[{"name":"SQL","slug":"SQL","permalink":"/categories/SQL/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"SQL","slug":"SQL","permalink":"/categories/SQL/"}]},{"title":"C# ReamrkÁâπÊÄß","slug":"CSharp_Remark_Attribute","date":"2020-04-03T11:11:11.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"DotNET/CSharp_Remark_Attribute/","link":"","permalink":"/DotNET/CSharp_Remark_Attribute/","excerpt":"RemarkÁâπÊÄßÁöÑÂ∫îÁî®Âú∫ÊôØ","text":"RemarkÁâπÊÄßÁöÑÂ∫îÁî®Âú∫ÊôØ Âú∫ÊôØ‰∏ÄÔºöÁî®Êà∑Áä∂ÊÄÅÁöÑÊûö‰∏æÂÄºÔºåÂÆö‰πâÁöÑÊòØËã±ÊñáÁöÑÂ≠óÊÆµÔºåÈúÄË¶ÅËæìÂá∫‰∏≠ÊñáÂê´‰πâ„ÄÇÊûö‰∏æÂÆö‰πâÂ¶Ç‰∏ãÔºöpublic enum UserState { /// &lt;summary&gt; /// Ê≠£Â∏∏ /// &lt;/summary&gt; Normal = 0, /// &lt;summary&gt; /// ÂÜªÁªì /// &lt;/summary&gt; Frozen = 1, /// &lt;summary&gt; /// Âà†Èô§ /// &lt;/summary&gt; Deleted = 2 } ÊôÆÈÄöÂÅöÊ≥ïÔºöÊ†πÊçÆÊûö‰∏æÂÄºËøõË°åÂà§Êñ≠ÔºåÁÑ∂ÂêéËæìÂá∫‰∏≠ÊñáÂê´‰πâÔºöUserState userState = UserState.Normal; switch (userState) { case UserState.Deleted: Console.WriteLine(&quot;Âà†Èô§&quot;); break; case UserState.Normal: Console.WriteLine(&quot;Ê≠£Â∏∏&quot;); break; case UserState.Frozen: Console.WriteLine(&quot;ÂÜªÁªì&quot;); break; } ËøôÁßçÂÜôÊ≥ïËøùÂèçÂºÄ‰∏çÂéüÂàôÔºå‰∏çÂà©‰∫é‰ª•ÂêéÁöÑÊâ©Â±ïÔºå‰∏ãÈù¢‰ΩøÁî®ÁâπÊÄßÂÆûÁé∞ÂÖàÂÆö‰πâRemarkÁâπÊÄßÔºöusing System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace TianciAttribute { /// &lt;summary&gt; /// ÁâπÊÄß /// &lt;/summary&gt; public class RemarkAttribute: Attribute { private string _Remark = null; /// &lt;summary&gt; /// ÊúâÂèÇÊûÑÈÄ†ÂáΩÊï∞ /// &lt;/summary&gt; /// &lt;param name=&quot;remark&quot;&gt;&lt;/param&gt; public RemarkAttribute(string remark) { this._Remark = remark; } public string GetRemark() { return _Remark; } } } UserStateÊûö‰∏æ‰øÆÊîπÂ¶Ç‰∏ãÔºöpublic enum UserState { /// &lt;summary&gt; /// Ê≠£Â∏∏ /// &lt;/summary&gt; [Remark(&quot;Ê≠£Â∏∏&quot;)] Normal = 0, /// &lt;summary&gt; /// ÂÜªÁªì /// &lt;/summary&gt; [Remark(&quot;ÂÜªÁªì&quot;)] Frozen = 1, /// &lt;summary&gt; /// Âà†Èô§ /// &lt;/summary&gt; [Remark(&quot;Âà†Èô§&quot;)] Deleted = 2 } ÂÜô‰∏Ä‰∏™Êâ©Â±ïÊñπÊ≥ïÔºåÂØπEnumÁ±ªÂûãËøõË°åÊâ©Â±ïÔºöusing System; using System.Collections.Generic; using System.Linq; using System.Reflection; using System.Text; using System.Threading.Tasks; namespace TianciAttribute { public static class RemarkExtension { /// &lt;summary&gt; /// EnumÁöÑÊâ©Â±ïÊñπÊ≥ïÔºåÈùôÊÄÅÁ±ªÔºåÈùôÊÄÅÊñπÊ≥ïÔºåÁ¨¨‰∏Ä‰∏™ÂèÇÊï∞ÂâçÈù¢Ê∑ªÂä†this /// &lt;/summary&gt; /// &lt;param name=&quot;value&quot;&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public static string GetRemark(this Enum value) { //Ëé∑ÂèñÁ±ªÂûã Type type = value.GetType(); //Ëé∑ÂèñÂ≠óÊÆµ FieldInfo fieId = type.GetField(value.ToString()); //Âà§Êñ≠Â≠óÊÆµ‰∏äÈù¢ÊòØÂê¶ÂÆö‰πâ‰∫ÜReamrkAttributeÁâπÊÄß if (fieId.IsDefined(typeof(RemarkAttribute))) { //ÂàõÂª∫ÂÆû‰æã RemarkAttribute attribute = (RemarkAttribute)fieId.GetCustomAttribute(typeof(RemarkAttribute)); return attribute.GetRemark(); } else { return value.ToString(); } } } } ÊúÄÂêéMain()ÊñπÊ≥ïÈáåÈù¢Ë∞ÉÁî®using System; using System.Collections.Generic; using System.Linq; using System.Text; using System.Threading.Tasks; namespace TianciAttribute { class Program { static void Main(string[] args) { UserState userState = UserState.Normal; Console.WriteLine(userState.GetRemark()); Console.ReadKey(); } } } ËæìÂá∫ÁªìÊûú","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"C#ÁêÜËÆ∫Èù¢ËØïÈ¢ò","slug":"CSharp_Interview_ques_2","date":"2020-03-06T13:14:20.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"DotNET/CSharp_Interview_ques_2/","link":"","permalink":"/DotNET/CSharp_Interview_ques_2/","excerpt":"ËøôÊ¨°ÁöÑÈù¢ËØïÈ¢òÂ§ßÂ§ö‰∏∫ÁêÜËÆ∫Áü•ËØÜ","text":"ËøôÊ¨°ÁöÑÈù¢ËØïÈ¢òÂ§ßÂ§ö‰∏∫ÁêÜËÆ∫Áü•ËØÜ 1. Êï∞ÁªÑÊúâÊ≤°Êúâlength()ÊñπÊ≥ïÔºåStringÊúâÊ≤°Êúâlength()ÊñπÊ≥ïÔºüstring[] sz = { &quot;1&quot;, &quot;2&quot;, &quot;3&quot; }; Console.WriteLine(sz.Length); String a = &quot;1&quot;; Console.WriteLine(a.Length); ÂæàÊòéÊòæËøô‰∏§‰∏™ÈÉΩÊúâlength()ÊñπÊ≥ï2. Ë∞àË∞àfinalÔºåfinallyÔºåfinalizeÁöÑÂå∫Âà´final Ôºö‰øÆÈ•∞Á¨¶ÔºàÂÖ≥ÈîÆÂ≠óÔºâÂ¶ÇÊûúÁ±ªË¢´Â£∞Êòé‰∏∫final,Â∞±‰∏çËÉΩÂÜçÊ¥æÁîüÊñ∞ÁöÑÂ≠êÁ±ª‰πü‰∏çËÉΩ‰Ωú‰∏∫Áà∂Á±ªË¢´ÁªßÊâø finally ÔºöÂú®ÂºÇÂ∏∏Â§ÑÁêÜÊó∂Êèê‰æõfinallyÂùóÊù•ÊâßË°åÊìç‰ΩúÔºå‰∏çÁÆ°ÊúâÊ≤°ÊúâÂºÇÂ∏∏ÔºåfinallyÈáåÈù¢ÁöÑ‰ª£Á†ÅÂßãÁªà‰ºöË¢´ÊâßË°å finalize ÔºöÊñπÊ≥ïÂêçÔºåfinalizeÊòØÂú®ObjectÁ±ª‰∏≠ÂÆö‰πâÁöÑÔºåÊâÄÊúâÁöÑÁ±ªÈÉΩÁªßÊâø‰∫ÜÂÆÉ 3. Â¶Ç‰ΩïÂ§ÑÁêÜÂá†ÂçÅ‰∏áÊù°Âπ∂ÂèëÊï∞ÊçÆ‰ΩøÁî®ÁºìÂ≠òÔºåËÆøÈóÆËøáÁöÑÊï∞ÊçÆ‰∏çÈúÄË¶Å‰∫åÊ¨°ËÆøÈóÆÊï∞ÊçÆÂ∫ì Êï∞ÊçÆÂ∫ì‰ΩøÁî®Â≠òÂÇ®ËøáÁ®ãÔºåÂ∞ΩÈáèÂàÜÈ°µ ‰ΩøÁî®Â§öÁ∫øÁ®ãÂàÜÊâπÊ¨°Â§ÑÁêÜ 4. Â†ÜÂíåÊ†àÁöÑÂå∫Âà´Ê†àÔºöÁî±ÁºñËØëÂô®Ëá™Âä®ÂàÜÈÖç„ÄÅÈáäÊîæÔºåÂú®ÂáΩÊï∞‰Ωì‰∏≠ÂÆö‰πâÁöÑÂèòÈáèÈÄöÂ∏∏Âú®Ê†à‰∏ä Â†ÜÔºöÁî±Á®ãÂ∫èÂëòÂàÜÈÖçÈáäÊîæÔºåÁî®new„ÄÅmallocÂàÜÈÖçÂÜÖÂ≠òÂáΩÊï∞ÂæóÂà∞ÁöÑÂ∞±ÊòØÂú®Â†Ü‰∏ä 5. ÊàêÂëòÂèòÈáèÂíåÊàêÂëòÂáΩÊï∞ÂâçÂä†staticÁöÑ‰ΩúÁî®ÂÆÉ‰ª¨Ë¢´Áß∞‰∏∫Â∏∏ÊàêÂëòÂèòÈáèÂíåÂ∏∏ÊàêÂëòÂáΩÊï∞ÔºåÂèàÁß∞‰∏∫Á±ªÊàêÂëòÂèòÈáèÂíåÁ±ªÊàêÂëòÂáΩÊï∞ÔºåÂàÜÂà´Áî®Êù•ÂèçÊò†Á±ªÁöÑÁä∂ÊÄÅÔºå ÊØîÂ¶ÇÁ±ªÊàêÂëòÂèòÈáèÂèØ‰ª•Áî®Êù•ÁªüËÆ°Á±ªÂÆû‰æãÁöÑÊï∞ÈáèÔºåÁ±ªÊàêÂëòÂáΩÊï∞Ë¥üË¥£ËøôÁßçÁªüËÆ°ÁöÑÂä®‰Ωú 6. C#ÂèØÂê¶Áõ¥Êé•ÂØπÂÜÖÂ≠òËøõË°åÊìç‰ΩúC#ÂèØ‰ª•Áõ¥Êé•ÂØπÂÜÖÂ≠òËøõË°åÊìç‰Ωú„ÄÇ‰ΩÜÊòØÈªòËÆ§ÊÉÖÂÜµ‰∏ãÔºå‰∏∫‰∫Ü‰øùÊåÅÁ±ªÂûãÂÆâÂÖ®ÔºåC#‰∏çÊîØÊåÅÊåáÈíàËøêÁÆó ‰ΩÜÊòØÂèØ‰ª•ÈÄöËøá‰ΩøÁî®unsafeÂÖ≥ÈîÆÂ≠óÔºåÂÆö‰πâÂèØ‰ΩøÁî®ÊåáÈíàÁöÑ‰∏çÂÆâÂÖ®‰ª£Á†Å 7. ConstÂíåReadOnlyÔºüConstÂÖ≥ÈîÆÂ≠óÁî®Êù•Â£∞ÊòéÁºñËØëÊó∂Â∏∏Èáè ReadOnlyÁî®Êù•Â£∞ÊòéËøêË°åÊó∂Â∏∏Èáè 8. StringÂíåStringBufferÁöÑÂå∫Âà´Âíå‰ºòÁº∫ÁÇπStringÁ±ªË°®Á§∫ÂÜÖÂÆπ‰∏çÂèØÊîπÂèòÁöÑÂ≠óÁ¨¶‰∏≤ StringBufferÁ±ªË°®Á§∫ÂÜÖÂÆπÂèØ‰ª•Ë¢´‰øÆÊîπÁöÑÂ≠óÁ¨¶‰∏≤ StringBufferÁöÑÊâßË°åÈÄüÂ∫¶Ë¶ÅÂ§ß‰∫éString 9.‰ªÄ‰πàÊòØÂÄºÁ±ªÂûãÔºå‰ªÄ‰πàÊòØÂºïÁî®Á±ªÂûãÔºüÂÄºÁ±ªÂûãÔºàvalue typeÔºâÔºöbyteÔºåshortÔºåintÔºålongÔºåfloatÔºådoubleÔºådecimalÔºåcharÔºåbool Âíå struct ÁªüÁß∞‰∏∫ÂÄºÁ±ªÂûã„ÄÇÂÄºÁ±ªÂûãÂèòÈáèÂ£∞ÊòéÂêéÔºå‰∏çÁÆ°ÊòØÂê¶Â∑≤ÁªèËµãÂÄºÔºåÁºñËØëÂô®‰∏∫ÂÖ∂ÂàÜÈÖçÂÜÖÂ≠ò„ÄÇ ÂºïÁî®Á±ªÂûãÔºàreference typeÔºâÔºöstring Âíå classÁªüÁß∞‰∏∫ÂºïÁî®Á±ªÂûã„ÄÇÂΩìÂ£∞Êòé‰∏Ä‰∏™Á±ªÊó∂ÔºåÂè™Âú®Ê†à‰∏≠ÂàÜÈÖç‰∏ÄÂ∞èÁâáÂÜÖÂ≠òÁî®‰∫éÂÆπÁ∫≥‰∏Ä‰∏™Âú∞ÂùÄÔºåËÄåÊ≠§Êó∂Âπ∂Ê≤°Êúâ‰∏∫ÂÖ∂ÂàÜÈÖçÂ†Ü‰∏äÁöÑÂÜÖÂ≠òÁ©∫Èó¥„ÄÇÂΩì‰ΩøÁî® new ÂàõÂª∫‰∏Ä‰∏™Á±ªÁöÑÂÆû‰æãÊó∂ÔºåÂàÜÈÖçÂ†Ü‰∏äÁöÑÁ©∫Èó¥ÔºåÂπ∂ÊääÂ†Ü‰∏äÁ©∫Èó¥ÁöÑÂú∞ÂùÄ‰øùÂ≠òÂà∞Ê†à‰∏äÂàÜÈÖçÁöÑÂ∞èÁâáÁ©∫Èó¥‰∏≠„ÄÇ ÂÖàÂà∞ËøôÈáåÂêßÔºÅ","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"Èù¢ËØïÈ¢ò","slug":"Èù¢ËØïÈ¢ò","permalink":"/tags/Èù¢ËØïÈ¢ò/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"C#Â∏∏ËßÅÁÆóÊ≥ïÈ¢ò","slug":"CSharp_Interview_ques_1","date":"2020-03-03T10:20:30.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"DotNET/CSharp_Interview_ques_1/","link":"","permalink":"/DotNET/CSharp_Interview_ques_1/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ãÈÅáÂà∞ËøáÁöÑÈù¢ËØïÈ¢ò","text":"ËÆ∞ÂΩï‰∏Ä‰∏ãÈÅáÂà∞ËøáÁöÑÈù¢ËØïÈ¢ò ÊâìÂç∞Âá∫2000-2500‰πãÈó¥ÊâÄÊúâÁöÑÈó∞Âπ¥Âπ¥‰ªΩ1.Âπ¥‰ªΩÂøÖÈ°ª‰∏∫4ÁöÑÂÄçÊï∞for (int a = 2000; a &lt;= 2500; a++) { if (a % 4 == 0) { Console.WriteLine(a); } } ÊâìÂç∞Âá∫1+2!+3!+‚Ä¶+20!ÁöÑÂíåÔºåÂ∞±ÊòØ1-20ÁöÑÈò∂‰πò‰πãÂíåÁ¨¨‰∏ÄÁßçÊñπÊ≥ïstatic void Main(string[] args) { int sum = 0; for (int i = 1; i &lt;= 20; i++) { sum += jieCheng(i); } Console.WriteLine(sum); Console.ReadKey(); } static int jieCheng(int n) { if (n == 1) { return 1; } else { return n * jieCheng(n - 1); } } Á¨¨‰∫åÁßçÊñπÊ≥ïint sum = 0; int n = 20; for (int i = 1; i &lt;= n; i++) { int temp = 1; for (int j = 1; j &lt;= i; j++) { temp *= j; } sum += temp; } Console.WriteLine(sum); Console.ReadKey(); ÂÜôÂá∫‰∏Ä‰∏™ÊñπÊ≥ïÔºåÂèÇÊï∞ÊòØ‰∏â‰∏™Êï¥Êï∞Ôºàx,y,zÔºâÔºåÊåâ‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫èÁ¨¨‰∏ÄÁßç‰ΩøÁî®Êï∞ÁªÑËá™Â∏¶ÁöÑÊéíÂ∫èstatic void PaiXu(int x, int y, int z) { int[] num = new int[3]; num[0] = x; num[1] = y; num[2] = z; Array.Sort(num); Console.WriteLine(&quot;‰ªéÂ∞èÂà∞Â§ßÁªìÊûú‰æùÊ¨°‰∏∫Ôºö&quot;); for (int i = 0; i &lt; num.Length; i++) { Console.WriteLine(num[i]); } } Â¶ÇÊûúÈ¢òÁõÆË¶ÅÊ±Ç‰ªéÁî®Êà∑ËæìÂÖ•ÁöÑ‰∏â‰∏™Êï¥Êï∞Êù•ËøõË°åÊéíÂ∫èÁöÑËØùÔºåÂèØ‰ª•ËøôÊ†∑ÂÜôint[] num = new int[3]; Console.WriteLine(&quot;ËØ∑ËæìÂÖ•‰∏â‰∏™Êï¥Êï∞&quot;); for (int i = 0; i &lt; num.Length; i++) { Console.WriteLine(&quot;ËØ∑ËæìÂÖ•Á¨¨{0}‰∏™Êï∞Â≠ó&quot;, i + 1); num[i] = Convert.ToInt32(Console.ReadLine()); } //‰ªéÂ∞èÂà∞Â§ßÊéíÂ∫è Array.Sort(num); Console.WriteLine(&quot;Êï∞Â≠ó‰ªéÂ∞èÂà∞Â§ß‰æùÊ¨°‰∏∫Ôºö&quot;); for (int i = 0; i &lt; num.Length; i++) { Console.WriteLine(num[i]); } Console.ReadKey(); 1Ôºå1Ôºå2Ôºå3Ôºå5Ôºå8Ôºå‚Ä¶Ëé∑ÂèñÁ¨¨30‰∏™Êï∞ÂÄºÊ≤°ÊúâËßÑÂÆöÁöÑËØùËøô‰∏™Êñπ‰æøÁêÜËß£int[] list = new int[30]; list[0] = 1; list[1] = 1; for (int i = 2; i &lt; 30; i++) { list[i] = list[i - 1] + list[i - 2]; Console.WriteLine(list[i]); } Console.ReadKey(); ÂøÖÈ°ª‰ΩøÁî®ÈÄíÂΩíÁöÑËØùÂèØ‰ª•ËøôÊ†∑ÂÜôstatic void Main(string[] args) { for (int i = 0; i &lt; 30; i++) { Console.WriteLine(GetNum(i)); } Console.ReadKey(); } static int GetNum(int n) { if (n == 0 || n == 1) { return 1; } else { return GetNum(n - 1) + GetNum(n - 2); } } ÊúÄÁªèÂÖ∏ÁöÑÂÜíÊ≥°ÊéíÂ∫èint tem = 0; int[] list = { 1, 23, 12, 421, 31, 213, 42 }; for (int i = 0; i &lt; list.Length - 1; i++) { for (int j = 0; j &lt; list.Length - 1 - i; j++) { if (list[j] &gt; list[j + 1]) { tem = list[j]; list[j] = list[j + 1]; list[j + 1] = tem; } } } Console.ReadKey(); ‰∫ßÁîü‰∏Ä‰∏™intÊï∞ÁªÑÔºåÈïøÂ∫¶‰∏∫100ÔºåÂπ∂ÂêëÂÖ∂‰∏≠ÈöèÂç≥ÊèíÂÖ•1-100Ôºå‰∏î‰∏çËÉΩÈáçÂ§çList&lt;int&gt; lst = new List&lt;int&gt;(); Random r = new Random(); while (true) { int temp = r.Next(1, 101); if (lst.Count == 100) { break; } if (!lst.Contains(temp)) { lst.Add(temp); } } for (int i = 0; i &lt; lst.Count; i++) { Console.WriteLine(lst[i]); } Console.ReadKey(); ÊâìÂç∞‰πù‰πù‰πòÊ≥ïË°®int i, j; for (i = 1; i &lt;= 9; i++) { for (j = 1; j &lt;= i; j++) { Console.Write(&quot;{0}*{1}={2,2} &quot;, j, i, j * i); } Console.WriteLine(); } Console.ReadKey(); Êó†Â∏àËá™ÈÄöÁöÑÊ∞¥‰ªôËä±Êï∞Ôºå‰∏§ÁßçÊñπÂºèÈÉΩÂèØ‰ª•Âèñ‰∏™ÂçÅÁôæ‰Ωçfor (int i = 100; i &lt; 1000; i++) { //int n1 = i / 100 % 10;//Áôæ‰Ωç //int n2 = i / 10 % 10; //ÂçÅ‰Ωç //int n3 = i % 10;//‰∏™‰Ωç string num = i.ToString(); int n1 = int.Parse(num[0].ToString());//Áôæ‰Ωç int n2 = int.Parse(num[1].ToString());//ÂçÅ‰Ωç int n3 = int.Parse(num[2].ToString());//‰∏™‰Ωç if (n1 * n1 * n1 + n2 * n2 * n2 + n3 * n3 * n3 == i) { Console.WriteLine(i); } } Ë°å‰∫ÜË°å‰∫ÜÂ∞±ËøôÊ†∑ÂêßÔºÅÔºÅÔºÅ","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"Èù¢ËØïÈ¢ò","slug":"Èù¢ËØïÈ¢ò","permalink":"/tags/Èù¢ËØïÈ¢ò/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"C#Êâ©Â±ïÊñπÊ≥ï","slug":"CSharp_Extension","date":"2020-02-10T22:00:00.000Z","updated":"2021-11-02T08:51:09.369Z","comments":true,"path":"DotNET/CSharp_Extension/","link":"","permalink":"/DotNET/CSharp_Extension/","excerpt":"C#Êâ©Â±ïÊñπÊ≥ï","text":"C#Êâ©Â±ïÊñπÊ≥ï ÂÆö‰πâ1. Â£∞ÊòéÊâ©Â±ïÊñπÊ≥ïÁöÑÁ±ªÂøÖÈ°ª‰∏∫staticÁ±ªÔºõ2. Êâ©Â±ïÊñπÊ≥ïÊú¨Ë∫´‰πüÂøÖÈ°ªÂ£∞Êòé‰∏∫staticÔºõ3. Êâ©Â±ïÊñπÊ≥ïÂøÖÈ°ªÂåÖÂê´ÂÖ≥ÈîÆÂ≠óthis‰Ωú‰∏∫Á¨¨‰∏Ä‰∏™ÂèÇÊï∞Á±ªÂûãÔºåÂπ∂Âú®ÂêéÈù¢Ë∑üÁùÄÂÆÉÊâÄÊâ©Â±ïÁöÑÁ±ªÂûãÁöÑÂêçÁß∞„ÄÇÂºÄÂßãÊìç‰ΩúÂÖàÂàõÂª∫‰∏Ä‰∏™ÈùôÊÄÅÁ±ªÂè´StringExtensionÁÑ∂ÂêéÁÆÄÂçïÂÜô‰∏Ä‰∏™ÈùôÊÄÅÊñπÊ≥ïÔºåÊàëËøôÈáåÂÜôÁöÑÊòØÂ∏ÉÂ∞îÔºåÁî®Êù•Âà§Êñ≠ÂÖ•ÂèÇÊòØÂê¶Á≠â‰∫é1ÊéßÂà∂Âô®ÂØºÂÖ•Êâ©Â±ïÊñπÊ≥ïÊâÄÂú®ÁöÑÁ±ªÁöÑÂëΩÂêçÁ©∫Èó¥ÔºåÈôêÂà∂Êâ©Â±ïÊñπÊ≥ïÁöÑ‰ΩøÁî®public static class StringExtension { /// &lt;summary&gt; /// RemarkÔºöÂà§Êñ≠ËæìÂÖ•ÁöÑÊòØ‰∏çÊòØ1 /// &lt;/summary&gt; /// &lt;param name=&quot;input&quot;&gt;&lt;/param&gt; /// &lt;returns&gt;&lt;/returns&gt; public static bool IsOne(this int input) { if (input == 1) { return true; } return false; } } Êé•Âè£Ë∞ÉÁî®ÊñπÊ≥ïÔºå‰º†ÂèÇ‰∏∫1ÔºåËøîÂõûtrue ÊÄªÁªì- Êâ©Â±ïÊñπÊ≥ïÂøÖÈ°ªÂÆö‰πâÂú®ÈùôÊÄÅÁ±ª‰∏≠ÔºåÊâ©Â±ïÊñπÊ≥ïÊú¨Ë∫´‰πüÊòØÈùôÊÄÅÊñπÊ≥ïÔºåÊâ©Â±ïÊñπÊ≥ï‰πüÂèØ‰ª•ÈáçËΩΩ„ÄÇ- Â¶ÇÊûúÊâ©Â±ïÊñπÊ≥ïÂíåÂØπÂ∫îÁöÑÁ±ª‰Ωç‰∫é‰∏çÂêåÁöÑÂëΩÂêçÁ©∫Èó¥Ôºå‰ΩøÁî®Êó∂Â∫îÂºïÂÖ•Êâ©Â±ïÊñπÊ≥ïÊâÄÂú®ÈùôÊÄÅÁ±ªÁöÑÂëΩÂêçÁ©∫Èó¥„ÄÇ- ÂΩìÁ±ªÊú¨Ë∫´ÁöÑÊñπÊ≥ï‰∏éÊâ©Â±ïÊñπÊ≥ïÈáçÂêçÊó∂ÔºåÁ±ªÊú¨Ë∫´ÁöÑÊñπÊ≥ïË¢´‰ºòÂÖàË∞ÉÁî®„ÄÇÔºàÂª∫ËÆÆÈÄöËøáÂëΩÂêçÁ©∫Èó¥ÁöÑÊñπÂºèÊù•ÈôêÂà∂Êâ©Â±ïÊñπÊ≥ïÁöÑ‰ΩøÁî®Ôºâ- Êâ©Â±ïÊñπÊ≥ï‰∏çË¶ÅËøáÂ§ö‰ΩøÁî®„ÄÇÂ∞§ÂÖ∂ÊòØÁ≥ªÁªüÂÆö‰πâÁöÑÁ±ªÔºå‰∏çË¶ÅÈöèÊÑèÂ¢ûÂä†Êâ©Â±ïÊñπÊ≥ï„ÄÇ","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"WebAPIÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ","slug":"WebAPI_Exception","date":"2020-02-03T21:21:21.000Z","updated":"2021-11-02T08:51:09.494Z","comments":true,"path":"DotNET/WebAPI_Exception/","link":"","permalink":"/DotNET/WebAPI_Exception/","excerpt":"ËÆ∞ÂΩï‰∏Ä‰∏ãWebAPIÁöÑÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ","text":"ËÆ∞ÂΩï‰∏Ä‰∏ãWebAPIÁöÑÂÖ®Â±ÄÂºÇÂ∏∏Â§ÑÁêÜ ÈÄöÂ∏∏Êé•Âè£Âá∫Áé∞‰∏Ä‰∫õÂ∞èÈîôËØØÔºåÈ°µÈù¢‰ºöËøîÂõû‰∏ÄÂ†ÜÁúã‰∏çÊáÇÁöÑ‰ª£Á†ÅËøôÂØπ‰∫éÊàë‰ª¨ÂØªÊâæÈîôËØØÂπ∂Ê≤°Êúâ‰ªÄ‰πàÂ§™Â§ßÁöÑÂ∏ÆÂä©ÔºåÂèçËÄåÁúãÁùÄÂæàÈöæÂèó ÈÅáÂà∞ËøôÁßçÊÉÖÂÜµÊàë‰ª¨ÂèØ‰ª•ÂÜô‰∏Ä‰∏™ÂÖ®Â±ÄÂºÇÂ∏∏ËøáÊª§Âô®ÔºåÊé•Âè£Êä•ÈîôÁõ¥Êé•Ë∑≥Âà∞ËøáÊª§Âô®È¶ñÂÖàÊñ∞Âª∫‰∏Ä‰∏™ActionFilterÁ±ªÔºåÁªßÊâøËá≥ExceptionFilterAttribute‰ª£Á†ÅÂ¶Ç‰∏ã/// &lt;summary&gt; /// Remark:ËøáÊª§ÊéâWebApiÊé•Âè£ÁöÑÂºÇÂ∏∏ÔºåÁªü‰∏ÄËøîÂõûÂºÇÂ∏∏‰ø°ÊÅØ /// &lt;/summary&gt; public class ActionFilter : ExceptionFilterAttribute { public override void OnException(HttpActionExecutedContext context) { //ËÆ∞ÂΩïÈîôËØØÊó•Âøó //LogHelper.Error($&quot;{context.Exception }&quot;, context.Request.RequestUri.AbsolutePath); //ÁØ°ÊîπResponse context.Response = new HttpResponseMessage(HttpStatusCode.OK) { Content = new StringContent(JsonConvert.SerializeObject(new { code = &quot;520&quot;, res = new { msg = &quot;Êé•Âè£ÊúâÈóÆÈ¢ò&quot; } })) }; } } ÁÑ∂ÂêéÂú®WebApiConfigÁ±ªÈáåÈù¢ÂÖ®Â±ÄÈÖçÁΩÆpublic static class WebApiConfig { public static void Register(HttpConfiguration config) { // Web API ÈÖçÁΩÆÂíåÊúçÂä° // Web API Ë∑ØÁî± config.MapHttpAttributeRoutes(); config.Routes.MapHttpRoute( name: &quot;DefaultApi&quot;, routeTemplate: &quot;api/{controller}/{id}&quot;, defaults: new { id = RouteParameter.Optional } ); //ÂÖ®Â±ÄÊ≥®ÂÜåÂºÇÂ∏∏ËøáÊª§Âô® config.Filters.Add(new ActionFilter()); } } Âè™Ë¶ÅÊé•Âè£Âá∫Áé∞ÂºÇÂ∏∏Â∞±‰ºöË∑≥Âà∞Ëøô‰∏™Âú∞ÊñπÔºåËøîÂõûÊàë‰ª¨ÂÆö‰πâÁöÑ‰ø°ÊÅØ ÂèØ‰ª•ÁúãÂà∞ÔºåÂ∞ΩÁÆ°Êé•Âè£Â∑≤ÁªèÊäõÂá∫ÂºÇÂ∏∏‰∫ÜÔºå‰ΩÜÊòØÁΩëÈ°µËøîÂõûÁöÑ‰ø°ÊÅØ‰æùÊóßÊòØÊàëÊâÄÂÆö‰πâÁöÑÈîôËØØ‰ø°ÊÅØÂèØ‰ª•ÊâìÂç∞Âà∞Êó•ÂøóÔºåÈÅøÂÖçÊé•Âè£‰ø°ÊÅØÊ≥ÑÈú≤ÔºåÂÖ∑‰ΩìÊâìÂç∞Êó•Âøó‰∏ãÊúüÂÜçËØ¥Â≠¶‰∏öÁπÅÂøôÔºåÂëäËæû","categories":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"DotNET","slug":"DotNET","permalink":"/categories/DotNET/"}]},{"title":"HexoÊñá‰ª∂Êìç‰Ωú","slug":"Hexo_Command","date":"2020-01-13T20:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Hexo/Hexo_Command/","link":"","permalink":"/Hexo/Hexo_Command/","excerpt":"Êê≠Âª∫HexoÈùôÊÄÅÂçöÂÆ¢ÈöæÂÖç‰ºöÈÅáÂà∞Â∞èÈóÆÈ¢ò","text":"Êê≠Âª∫HexoÈùôÊÄÅÂçöÂÆ¢ÈöæÂÖç‰ºöÈÅáÂà∞Â∞èÈóÆÈ¢ò ‰ªäÂ§©ËÆ≤‰∏Ä‰∏ãÈÅáÂà∞ÁöÑ‰∏Ä‰∫õÂ∞èÂùëÔºå‰ª•ÂèäËß£ÂÜ≥ÂäûÊ≥ïÈÄöÂ∏∏ÂçöÂÆ¢ÈáåÈù¢‰ºöÊúâ‰∏Ä‰∫õÂÖ∂‰ªñÂ∞èÈ°µÈù¢Ôºå‰∏çÊòØÁî±hexoÁîüÊàêÁöÑÈ°µÈù¢Ôºå‰æãÂ¶ÇlifeÊñá‰ª∂Â§π ÈÇ£‰πàËøô‰∫õÈ°µÈù¢ÊîæÂà∞publicÊñá‰ª∂Â§πÂÜÖÔºåÊØèÊ¨°hexo cleanÈÉΩ‰ºöË¢´Ê∏ÖÈô§ÊéâÁÑ∂Âêé‰πü‰∏ç‰ºö‰∏ä‰º†Âà∞gitÔºåÈÇ£‰πàËøô‰∏™Â∫îËØ•ÊÄé‰πàËß£ÂÜ≥Âë¢ÂÖ∂ÂÆûÁõ¥Êé•ÊääÊñá‰ª∂Â§πÊãñÂà∞hexo‰∏ãÈù¢ÁöÑsource‰∏ãÈù¢Ë∑ü_postsÊñá‰ª∂Â§πÂêåÁ∫ßÂ∞±Ë°å‰∫Ü ËøôÊ†∑ÁöÑËØùÊØèÊ¨°ÁîüÊàêÂíå‰∏ä‰º†Â∞±ÈÉΩ‰ºöÂ∏¶‰∏äËøô‰∏™Êñá‰ª∂Â§π‰∫Ü‰ΩÜÊòØÂèàÈÅáÂà∞‰∏Ä‰∏™Êñ∞ÈóÆÈ¢òÔºåËøôÊòØÂçïÁã¨ÁöÑÈ°µÈù¢ÊØèÊ¨°ÈáçÊñ∞ÁîüÊàêÈÉΩ‰ºöÊ∏≤Êüì‰∏ähexoÁöÑ‰∏ªÈ¢òÊ†∑Âºè‰ºöÂØºËá¥Ëøô‰∏™ÂçïÁã¨ÁöÑÈ°µÈù¢ÂÜÖÂÆπË∑ëÁâàÔºåÊÄé‰πàÂäûÂë¢ÂÖ∂ÂÆûÂæàÁÆÄÂçïÔºåÊâæÂà∞_config.yml‰∏ãÈù¢ÁöÑskip_renderÊîπÊàêËøô‰∏™Ê†∑Â≠êÔºålife‰∏∫‰Ω†ÁöÑÊñá‰ª∂Â§πÂêç ËøôÊ†∑Â∞±Â§ßÂäüÂëäÊàê‰∫ÜÔºÅÔºÅÔºÅ","categories":[{"name":"Hexo","slug":"Hexo","permalink":"/categories/Hexo/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Hexo","slug":"Hexo","permalink":"/categories/Hexo/"}]},{"title":"HexoÂÆâË£Ö‰∏éÈÉ®ÁΩ≤","slug":"Hexo_Setup","date":"2020-01-12T12:00:00.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Hexo/Hexo_Setup/","link":"","permalink":"/Hexo/Hexo_Setup/","excerpt":"ÊâìÂºÄGit BashÔºåËæìÂÖ•‰ª•‰∏ã‰ª£Á†ÅÂÆâË£Öhexo","text":"ÊâìÂºÄGit BashÔºåËæìÂÖ•‰ª•‰∏ã‰ª£Á†ÅÂÆâË£Öhexo $ npm install -g hexo ÂÆâË£ÖÂÆåÊàêÂú®‰ªªÊÑèÁõòÂàõÂª∫Êñá‰ª∂Â§πÔºå‰æãÂ¶ÇD:\\hexoÂÜçÂè≥ÂáªÊâìÂºÄGit BashÔºåËæìÂÖ•$ cd D:\\hexo $ hexo init hexo‰ºöËá™Âä®‰∏ãËΩΩ‰∏Ä‰∫õÊñá‰ª∂Âà∞Ëøô‰∏™ÁõÆÂΩïÁÑ∂ÂêéÁªßÁª≠ËæìÂÖ•$ npm install hexo-deployer-git Ëøô‰∏™ÊòØÂõ†‰∏∫Á≠â‰∏ãÊèê‰∫§‰ª£Á†ÅÈúÄË¶ÅÊ≠§Êèí‰ª∂Áé∞Âú®ÁîüÊàêÁΩëÁ´ôÂπ∂È¢ÑËßà$ hexo g $ hexo s ËøõÂÖ•ÊµèËßàÂô®ËæìÂÖ•localhost:4000ËÆøÈóÆ‰Ω†ÁöÑÁΩëÁ´ôÂêßÔºåCtrl+CÂÅúÊ≠¢È¢ÑËßàÂú®ÁΩë‰∏ä‰∏ã‰∏Ä‰∏™‰∏ªÈ¢òÁÑ∂ÂêéÊîæËøõhexoÊñá‰ª∂Â§π‰∏ãÈù¢ÁöÑthemeÊñá‰ª∂Â§πÈáåÈù¢‰øÆÊîπhexoÊñá‰ª∂Â§π‰∏≠_config.ymlÊñá‰ª∂ÈáåÈù¢ÁöÑthemeÂ±ûÊÄßÂ∞ÜÂéüÊù•ÁöÑlandscapeÊîπ‰∏∫‰Ω†ÊâÄ‰∏ãËΩΩ‰∏ªÈ¢òÁöÑÊñá‰ª∂Â§πÂêçÔºåÊâìÂºÄGit BashÈáçÊñ∞ÁîüÊàêÂπ∂È¢ÑËßà$ hexo g $ hexo s ‰Ω†‰ºöÂèëÁé∞È°µÈù¢Â∑≤ÁªèÈÄÇÂ∫î‰∫Ü‰Ω†ÁöÑ‰∏ªÈ¢ò‰πãÂêéÊâìÂºÄhexoÁõÆÂΩï‰∏ãÁöÑ_config.ymlÊúÄÂêé‰∏ÄÊÆµ ÁªëÂÆö‰Ω†ÁöÑGitHubÈ°πÁõÆÂú∞ÂùÄ$ hexo clean $ hexo g $ hexo d ‰ª•‰∏ä‰ª£Á†ÅÂàÜÂà´ÊòØÊ∏ÖÈô§publicÊñá‰ª∂Â§πÔºåÈáçÊñ∞ÁîüÊàêÔºåÂíåÊèê‰∫§‰ª£Á†ÅÂà∞GitHubÁÑ∂Âêé‰∏äGitHub‰Ω†‰ºöÂèëÁé∞Â≠òÂÇ®Â∫ìÈáåÈù¢ÁöÑÊñá‰ª∂ÈÉΩÊòØpublicÊñá‰ª∂Â§π‰∏ãÈù¢ÁöÑÊØèÊ¨°Êèê‰∫§‰ª£Á†ÅÈÉΩÂè™‰ºöÊèê‰∫§Ê≠§Êñá‰ª∂Â§π‰∏ãÁöÑ‰ª£Á†ÅÊú¨ÊúühexoÂÆâË£Ö‰∏éÈÉ®ÁΩ≤Â∞±Âà∞ËøôÈáåÔºå‰∏ãÊúüËßÅ","categories":[{"name":"Hexo","slug":"Hexo","permalink":"/categories/Hexo/"}],"tags":[{"name":"ÊäÄÊúØ","slug":"ÊäÄÊúØ","permalink":"/tags/ÊäÄÊúØ/"}],"keywords":[{"name":"Hexo","slug":"Hexo","permalink":"/categories/Hexo/"}]},{"title":"ËØóËØçÊ¨£Ëµè","slug":"UpdateInfo","date":"2020-01-09T22:22:22.000Z","updated":"2021-11-02T08:51:09.494Z","comments":true,"path":"Other/UpdateInfo/","link":"","permalink":"/Other/UpdateInfo/","excerpt":"","text":"‰Ω†ËØ¥Â∏òÂ§ñÊµ∑Ê£†ÔºåÈî¶Â±èÈ∏≥È∏ØÔºõÂêéÊù•Â∫≠Èô¢Êò•Ê∑±ÔºåÂí´Â∞∫ÁîªÂ†Ç ‰Ω†ËØ¥Á¨õÂ£∞Â¶ÇËØâÔºåË¥πÂ∞ΩÊÄùÈáèÔºõÂêéÊù•Ëå∂ÁÉüÂ∞öÁªøÔºå‰∫∫ÂΩ±Ëå´Ëå´ ‰Ω†ËØ¥ÂèØ‰∫∫Â¶ÇÁéâÔºå‰∏éÂ≠êÂÅïËáßÔºõÂêéÊù•Èïø‰∫≠ËøúÊúõÔºåÂ§úËâ≤ÂæÆÂáâ ‰Ω†ËØ¥ÈúûÊüìÂ§©ÂÖâÔºåÈôå‰∏äËä±ÂºÄ‰∏éË∞Å‰∫´ÔºõÂêéÊù•ÁÉüÁ¨ºÊü≥ÊöóÔºåÊπñÂøÉÊ∞¥Âä®ÂΩ±Êó†Âèå ‰Ω†ËØ¥ÂΩºÂ≤∏ÁÅØÁÅ´ÔºåÂøÉ‰πãÊâÄÂêëÔºõÂêéÊù•Ê∏îËàüÊôöÂî±ÔºåÁÉüÈõ®ÂΩ∑Âæ® ‰Ω†ËØ¥Ê∞¥ÈùôËé≤È¶ôÔºåÊÉ†È£éÂíåÁïÖÔºõÂêéÊù•‰∫ëÈÅÆËñÑÊúàÔºåÊ∏ÖÈú≤Â¶ÇÈúú ‰Ω†ËØ¥ÂπΩÁ™óÊ£ãÁΩ¢ÔºåÂÜçÂêêË°∑ËÇ†ÔºõÂêéÊù•È£éÂç∑Â≠§ÊùæÔºåÈõæÊº´Â±±ÂÜà ‰Ω†ËØ¥Á∫¢Ë¢ñ‰ΩØÂóîÔºåÁßãÊ≥¢ÊµÅËΩ¨ÊÄùÂº†ÊïûÔºõÂêéÊù•ÈªõÁúâÈïøÊïõÔºåÊò•Ëâ≤È£òÈõ∂Âà´ÈòÆÈÉé ‰Ω†ËØ¥ÊöóÈ¶ôÊµÆÂä®ÔºåÂàπÈÇ£ÂÖâËäíÔºõÂêéÊù•ÁéâÊÆíÁêºÁ¢éÔºåÁñèÂΩ±Ê®™Á™ó ‰Ω†ËØ¥ËâØËæ∞ÁæéÊôØÔºå‰πòÂÖ¥Áã¨ÂæÄÔºõÂêéÊù•Á∫¢Â∞òÁ¥´ÈôåÔºåÈõ™ËêΩÂ§™Ë°å ‰Ω†ËØ¥ËµãÂ∞ΩÈ´òÂîêÔºå‰∏âÁîüÁü≥‰∏äÔºõÂêéÊù•ÂêõÂ±ÖÊ∑ÑÂè≥ÔºåÂ¶æÂÆ∂Ê≤≥Èò≥ ‰Ω†ËØ¥ÁéâÊ•ºÊú±È¢úÔºåÈ£ûÊúàÊµÅËßûËøéÂÆ¢Ê£πÔºõÂêéÊù•ÂπΩË∞∑Â±ÖÂ£´ÔºåÊûïÁê¥Âê¨Èõ®ÂçßÁ¶ÖÊàø ‰Ω†ËØ¥È´òÂ±±ÊµÅÊ∞¥ÔºåÂÆ¢Á≠îÊò•Ê±üÔºõÂêéÊù•Á´†Âè∞Ê∏∏ÂÜ∂ÔºåÁ≥ªÈ©¨ÂûÇÊù® ‰Ω†ËØ¥Èî¶ÁëüÈü∂ÂÖâÔºåÂçéÁÅØÂπ¢Âπ¢ÔºõÂêéÊù•ËçºËòºÂºÄËá≥ÔºåÈùíËãîÊª°Â¢ô ‰Ω†ËØ¥Â§©Âú∞ÁéÑÈªÑÔºåÈ£éÊúàÁê≥ÁêÖÔºõÂêéÊù•ÊúàÊñúÊ±ü‰∏äÔºå‰∫ëÊ∑°Â§©Èïø ‰Ω†ËØ¥ÂÖ∞ËàüËΩªÂèëÔºåË•øÊ•ºÊúà‰∏ãÂøÜÂß£Â®òÔºõÂêéÊù•Ê±üÊπñ‰∏§ÂøòÔºåÂè™ÂΩ±Â§©Ê∂ØË∏èÁßãÊÆá ‰Ω†ËØ¥ÂπΩË∞∑Âê¨Ê∫™ÔºåÂØªËä≥Ê∏ÖÂ≤óÔºåÂêéÊù•ËêΩËä±‰∏ÅÈõ∂ÔºåÊ∞¥Ê∂∏ÊΩáÊπò ‰Ω†ËØ¥ÈúúÂÜ∑ÈïøÊ≤≥ÔºåËíπËë≠ËãçËãçÔºåÂêéÊù•‰ºä‰∫∫‰ΩïÂú®ÔºüÂ≠§ÂùêÊú™Â§Æ ‰Ω†ËØ¥ÊúàÊ¥íÂØíÊ±üÔºåÁéâÊü±ÁêºÊ¢ÅÔºåÂêéÊù•ÂÜ∑ÈïúÊÆãÈí©Ôºå‰∏âÊõ¥Ê¶ªÂáâ ‰Ω†ËØ¥Ê¢¶ÂëìÊïÖÂõ≠ÔºåÊ°ÉËä±Ê∞¥ÈáåÊ∏∏È∏≥È∏ØÔºõÂêéÊù•ÂçÉÂ±±ÊöÆÈõ™ÔºåËÄÅÁøÖÂá†ÂõûËá™Â•îÂøô","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"Â®±‰πê","slug":"Â®±‰πê","permalink":"/tags/Â®±‰πê/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]},{"title":"ÂçöÂÆ¢Ê≠£Âºè‰∏äÁ∫ø","slug":"MyFirstBlog","date":"2020-01-05T22:22:22.000Z","updated":"2021-11-02T08:51:09.401Z","comments":true,"path":"Other/MyFirstBlog/","link":"","permalink":"/Other/MyFirstBlog/","excerpt":"ÂâçË®ÄTianciBlog‰∫é2020-01-05Ê≠£Âºè‰∏äÁ∫ø","text":"ÂâçË®ÄTianciBlog‰∫é2020-01-05Ê≠£Âºè‰∏äÁ∫ø ÊÉπ‰∏ç‰ΩèÈ¢òËØó‰∏ÄÈ¶ñÊïÖ‰∫∫Ë•øËæûÂØåÂ£´Â∫∑‰∏∫Â≠¶ÊäÄÊúØÂà∞ËìùÁøîËìùÁøîÁßëÊäÄÂåÖÂàÜÈÖçÂàÜÈÖçÂèàÂà∞ÂØåÂ£´Â∫∑ÊïÖ‰∫∫‰∫åËæûÂØåÂ£´Â∫∑ËΩ¨Ë∫´Â∞±ÂéªÊñ∞‰∏úÊñπËã¶ÁªÉ‰∏âÂπ¥ÂΩìÂ§ßÂé®ÂÅöÈ•≠ËøòÂú®ÂØåÂ£´Â∫∑ÊïÖ‰∫∫‰∏âËæûÂØåÂ£´Â∫∑‰∏∫‰∫ÜÁîüÊ¥ª‰∏äÊ≠¶ÂΩìÊ≠¶ÂΩìÂá∫Êù•ÂåÖÂàÜÈÖçÂØåÂ£´Â∫∑ÈáåÂΩìÈó®Âç´","categories":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}],"tags":[{"name":"Â®±‰πê","slug":"Â®±‰πê","permalink":"/tags/Â®±‰πê/"}],"keywords":[{"name":"Other","slug":"Other","permalink":"/categories/Other/"}]}]}